[
  {
    "Id": "612165",
    "ThreadId": "257474",
    "Html": "\r\n<p>Hi</p>\r\n<p>Really often I want to load data in a backthread which is later shown in the UI and because I think many people have this scenario I'd like to share my idea/solution.</p>\r\n<p>Perhaps someone finds it usefule or furthermore it could be interesting for the MVVM Light Toolkit.</p>\r\n<p>Comments are welcome :-)</p>\r\n<p>In the beginning I created messages which are received by a listeners who were directing the messages to the components, retrieving the result and calling a callback.</p>\r\n<p>It looked Like This</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><br>//Create the RequestMessage with a callback<br>...<br>&nbsp;RequestCustomerMessage myMsg = <span style=\"color:blue\">new</span> RequestCustomerMessage(myConditionalClause,(result)=&gt; <span style=\"color:blue\">this</span>.processResult(result));\r\n<br>Task.Factory.StartNew(()=&gt;<span style=\"color:blue\">this</span>.MessengerInstance.Send&lt;RequestCustomerMessage&gt;(myMsg)));\r\n</pre>\r\n</div>\r\n<pre style=\"font-family:Consolas; font-size:13; color:black; background:white\">...<br><br>private void processResult(IEnumerable&lt;Customer&gt; customers)<br>{<br><pre style=\"font-family:Consolas; font-size:13px; color:black; background:none repeat scroll 0% 0% white\"><pre style=\"font-family:Consolas; font-size:13px; color:black; background:none repeat scroll 0% 0% white\"> <span style=\"color:#2b91af\">DispatcherHelper</span>.UIDispatcher.Invoke(<span style=\"color:blue\">new</span>&nbsp;<span style=\"color:#2b91af\">Action</span>(() this.=&gt; dispatchedProcess(customers)),&nbsp;<span style=\"color:blue\">this</span>.UIDispatchPriority,&nbsp;<span style=\"color:blue\">null</span>);</pre>\r\n</pre>\r\n}<br></pre>\r\n<p>This is quite a lot of redundant infrastructure code.</p>\r\n<p>&nbsp;</p>\r\n<p>So I created a new subclass based on MessageBase -&gt; &quot;UIDispatchMessageBase&quot;</p>\r\n<pre style=\"font-family:Consolas; font-size:13; color:black; background:white\"><br><pre style=\"font-family:Consolas; font-size:13px; color:black; background:none repeat scroll 0% 0% white\">&nbsp;&nbsp;<span style=\"color:gray\">///</span><span style=\"color:green\">&nbsp;</span><span style=\"color:gray\">&lt;summary&gt;</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray\">///</span><span style=\"color:green\">&nbsp;Base&nbsp;for&nbsp;all&nbsp;Messages&nbsp;with&nbsp;a&nbsp;reply&nbsp;to&nbsp;a&nbsp;UI&nbsp;Thread.</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray\">///</span><span style=\"color:green\">&nbsp;</span><span style=\"color:gray\">&lt;/summary&gt;</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray\">///</span><span style=\"color:green\">&nbsp;</span><span style=\"color:gray\">&lt;typeparam&nbsp;name=</span><span style=\"color:gray\">&quot;TResult&quot;</span><span style=\"color:gray\">&gt;&lt;/typeparam&gt;</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">public</span>&nbsp;<span style=\"color:blue\">abstract</span>&nbsp;<span style=\"color:blue\">class</span>&nbsp;<span style=\"color:#2b91af\">UIResponseMessage</span>&lt;TResult&gt;&nbsp;: MessageBase&nbsp;&nbsp;&nbsp; {\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray\">///</span><span style=\"color:green\">&nbsp;</span><span style=\"color:gray\">&lt;summary&gt;</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray\">///</span><span style=\"color:green\">&nbsp;Gets&nbsp;or&nbsp;sets&nbsp;the&nbsp;_&nbsp;reply&nbsp;action.</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray\">///</span><span style=\"color:green\">&nbsp;</span><span style=\"color:gray\">&lt;/summary&gt;</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray\">///</span><span style=\"color:green\">&nbsp;</span><span style=\"color:gray\">&lt;value&gt;</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray\">///</span><span style=\"color:green\">&nbsp;The&nbsp;_&nbsp;reply&nbsp;action.</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray\">///</span><span style=\"color:green\">&nbsp;</span><span style=\"color:gray\">&lt;/value&gt;</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">private</span>&nbsp;<span style=\"color:#2b91af\">Action</span>&lt;TResult&gt;&nbsp;_ReplyAction&nbsp;{&nbsp;<span style=\"color:blue\">get</span>;&nbsp;<span style=\"color:blue\">set</span>;&nbsp;}\r\n \r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray\">///</span><span style=\"color:green\">&nbsp;</span><span style=\"color:gray\">&lt;summary&gt;</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray\">///</span><span style=\"color:green\">&nbsp;Initializes&nbsp;a&nbsp;new&nbsp;instance&nbsp;of&nbsp;the&nbsp;</span><span style=\"color:gray\">&lt;see&nbsp;cref=</span><span style=\"color:gray\">&quot;UIResponseMessage&amp;lt;TResult&amp;gt;&quot;</span><span style=\"color:gray\">/&gt;</span><span style=\"color:green\">&nbsp;class.</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray\">///</span><span style=\"color:green\">&nbsp;</span><span style=\"color:gray\">&lt;/summary&gt;</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray\">///</span><span style=\"color:green\">&nbsp;</span><span style=\"color:gray\">&lt;param&nbsp;name=</span><span style=\"color:gray\">&quot;sender&quot;</span><span style=\"color:gray\">&gt;</span><span style=\"color:green\">The&nbsp;sender.</span><span style=\"color:gray\">&lt;/param&gt;</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray\">///</span><span style=\"color:green\">&nbsp;</span><span style=\"color:gray\">&lt;param&nbsp;name=</span><span style=\"color:gray\">&quot;response&quot;</span><span style=\"color:gray\">&gt;</span><span style=\"color:green\">The&nbsp;action&nbsp;which&nbsp;should&nbsp;be&nbsp;triged&nbsp;for&nbsp;the&nbsp;reply</span><span style=\"color:gray\">&lt;/param&gt;</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">public</span>&nbsp;UIResponseMessage(<span style=\"color:#2b91af\">Action</span>&lt;TResult&gt;&nbsp;response,<span style=\"color:blue\">object</span>&nbsp;sender)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;<span style=\"color:blue\">base</span>(sender)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">this</span>._ReplyAction&nbsp;=&nbsp;response;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">this</span>.setDefaults();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n \r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray\">///</span><span style=\"color:green\">&nbsp;</span><span style=\"color:gray\">&lt;summary&gt;</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray\">///</span><span style=\"color:green\">&nbsp;Initializes&nbsp;a&nbsp;new&nbsp;instance&nbsp;of&nbsp;the&nbsp;</span><span style=\"color:gray\">&lt;see&nbsp;cref=</span><span style=\"color:gray\">&quot;UIResponseMessage&amp;lt;TResult&amp;gt;&quot;</span><span style=\"color:gray\">/&gt;</span><span style=\"color:green\">&nbsp;class.</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray\">///</span><span style=\"color:green\">&nbsp;</span><span style=\"color:gray\">&lt;/summary&gt;</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray\">///</span><span style=\"color:green\">&nbsp;</span><span style=\"color:gray\">&lt;param&nbsp;name=</span><span style=\"color:gray\">&quot;sender&quot;</span><span style=\"color:gray\">&gt;</span><span style=\"color:green\">The&nbsp;message's&nbsp;original&nbsp;sender.</span><span style=\"color:gray\">&lt;/param&gt;</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray\">///</span><span style=\"color:green\">&nbsp;</span><span style=\"color:gray\">&lt;param&nbsp;name=</span><span style=\"color:gray\">&quot;target&quot;</span><span style=\"color:gray\">&gt;</span><span style=\"color:green\">The&nbsp;message's&nbsp;intended&nbsp;target.&nbsp;This&nbsp;parameter&nbsp;can&nbsp;be&nbsp;used</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray\">///</span><span style=\"color:green\">&nbsp;to&nbsp;give&nbsp;an&nbsp;indication&nbsp;as&nbsp;to&nbsp;whom&nbsp;the&nbsp;message&nbsp;was&nbsp;intended&nbsp;for.&nbsp;Of&nbsp;course</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray\">///</span><span style=\"color:green\">&nbsp;this&nbsp;is&nbsp;only&nbsp;an&nbsp;indication,&nbsp;amd&nbsp;may&nbsp;be&nbsp;null.</span><span style=\"color:gray\">&lt;/param&gt;</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray\">///</span><span style=\"color:green\">&nbsp;</span><span style=\"color:gray\">&lt;param&nbsp;name=</span><span style=\"color:gray\">&quot;response&quot;</span><span style=\"color:gray\">&gt;</span><span style=\"color:green\">The&nbsp;action&nbsp;which&nbsp;should&nbsp;be&nbsp;triged&nbsp;for&nbsp;the&nbsp;reply</span><span style=\"color:gray\">&lt;/param&gt;</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">public</span>&nbsp;UIResponseMessage(<span style=\"color:#2b91af\">Action</span>&lt;TResult&gt;&nbsp;response,&nbsp;<span style=\"color:blue\">object</span>&nbsp;sender,<span style=\"color:#2b91af\">TaskCreationOptions</span>&nbsp;options)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;<span style=\"color:blue\">base</span>(sender,options)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">this</span>._ReplyAction&nbsp;=&nbsp;response;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">this</span>.setDefaults();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n \r\n \r\n \r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray\">///</span><span style=\"color:green\">&nbsp;</span><span style=\"color:gray\">&lt;summary&gt;</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray\">///</span><span style=\"color:green\">&nbsp;Sets&nbsp;the&nbsp;defaults.</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray\">///</span><span style=\"color:green\">&nbsp;</span><span style=\"color:gray\">&lt;/summary&gt;</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">private</span>&nbsp;<span style=\"color:blue\">void</span>&nbsp;setDefaults()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">this</span>.UIDispatchPriority&nbsp;=&nbsp;<span style=\"color:#2b91af\">DispatcherPriority</span>.Background;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n \r\n \r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray\">///</span><span style=\"color:green\">&nbsp;</span><span style=\"color:gray\">&lt;summary&gt;</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray\">///</span><span style=\"color:green\">&nbsp;Gets&nbsp;or&nbsp;sets&nbsp;the&nbsp;UI&nbsp;dispatch&nbsp;priority.</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray\">///</span><span style=\"color:green\">&nbsp;</span><span style=\"color:gray\">&lt;/summary&gt;</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray\">///</span><span style=\"color:green\">&nbsp;</span><span style=\"color:gray\">&lt;value&gt;</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray\">///</span><span style=\"color:green\">&nbsp;The&nbsp;UI&nbsp;dispatch&nbsp;priority.</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray\">///</span><span style=\"color:green\">&nbsp;</span><span style=\"color:gray\">&lt;/value&gt;</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">public</span>&nbsp;<span style=\"color:#2b91af\">DispatcherPriority</span>&nbsp;UIDispatchPriority&nbsp;{&nbsp;<span style=\"color:blue\">get</span>;&nbsp;<span style=\"color:blue\">set</span>;&nbsp;}\r\n \r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray\">///</span><span style=\"color:green\">&nbsp;</span><span style=\"color:gray\">&lt;summary&gt;</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray\">///</span><span style=\"color:green\">&nbsp;Sends&nbsp;a&nbsp;response&nbsp;to&nbsp;the&nbsp;sender&nbsp;of&nbsp;this&nbsp;message</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray\">///</span><span style=\"color:green\">&nbsp;</span><span style=\"color:gray\">&lt;/summary&gt;</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray\">///</span><span style=\"color:green\">&nbsp;</span><span style=\"color:gray\">&lt;param&nbsp;name=</span><span style=\"color:gray\">&quot;response&quot;</span><span style=\"color:gray\">&gt;</span><span style=\"color:green\">The&nbsp;response.</span><span style=\"color:gray\">&lt;/param&gt;</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">public</span>&nbsp;<span style=\"color:blue\">void</span>&nbsp;Reply(TResult&nbsp;response)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af\">Action</span>&lt;TResult&gt;&nbsp;replyHandler&nbsp;=&nbsp;<span style=\"color:blue\">this</span>._ReplyAction;\r\n \r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">if</span>&nbsp;(replyHandler&nbsp;!=&nbsp;<span style=\"color:blue\">null</span>)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#2b91af\">DispatcherHelper</span>.UIDispatcher.Invoke(<span style=\"color:blue\">new</span>&nbsp;<span style=\"color:#2b91af\">Action</span>(()&nbsp;=&gt;&nbsp;replyHandler(response)),&nbsp;<span style=\"color:blue\">this</span>.UIDispatchPriority,&nbsp;<span style=\"color:blue\">null</span>);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>this class automatically dispatches the result back on the ui thread.<br><br>Also I'm currently working on creating a abstract listener which will transparently automise the backthread invokation (if requested). For this I'd change the class hirachy to<br>MessageBase-&gt;AsyncMessageBase-&gt;UIDispatchMessageBase<br><br>When the Listener retrieves a AsyncMessageBase it will automatically start the background UI Thread.<br><br><br>Comments are welcome :-)<br></pre>\r\n</pre>\r\n",
    "PostedDate": "2011-05-12T22:40:52.96-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]
[
  {
    "Id": "656125",
    "ThreadId": "268594",
    "Html": "\r\n<p>I'm having a heck of a time to get messaging to work properly in my app.&nbsp; Is there something special that needs to be addressed with Silverlight and/or MEF?</p>\r\n<p>I'm adding my Messenger.Default.Register code in a constructor for&nbsp;a ViewModel and then calling&nbsp;some Messenger.Default.Send code in a different ViewModel using a command.&nbsp; The command will fire and pass the proper parameters and it appears\r\n the Send code is executing, however it doesn't appear that the &quot;recieve&quot; ViewModel is really ever being constructed and thus the Register code is never called.&nbsp; Is there another convention I should be following for registering messages when using MEF?!?!</p>\r\n",
    "PostedDate": "2011-08-10T14:07:57.99-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "656132",
    "ThreadId": "268594",
    "Html": "<p>Hi,</p>\r\n<p>MEF and Messenger work well together, in fact one of the main value of the Messenger is scenarios like MEF where plugins get loaded at various times.</p>\r\n<p>However there is a catch: the message will only get received if the recipient is registered already. With that, I mean that the delivery is immediate, there is no delayed delivery (yet.... more about this in V5 later...).</p>\r\n<p>Make sure that your recipient VM gets constructed by MEF, registers properly and then you will start receiving the messages.</p>\r\n<p>Makes sense?</p>\r\n<p>Cheers,</p>\r\n<p>Laurent</p>",
    "PostedDate": "2011-08-10T14:18:24.193-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "657235",
    "ThreadId": "268594",
    "Html": "<p>Makes perfect sense...implemented a \"message queue\" so to speak which seems to work pretty well.&nbsp; If you (or anyone) notices anything that could be improved, greatly appreciated!</p>\n<p>Here is the command:</p>\n<p><br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; private</span> RelayCommand&lt;<span style=\"color: blue;\">string</span>&gt; _viewDetailCommand = <span style=\"color: blue;\">null</span>;<br /><span style=\"color: blue;\"><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span>public</span> RelayCommand&lt;<span style=\"color: blue;\">string</span>&gt; ViewDetailCommand<br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span>{<br /><span style=\"color: blue;\"><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span>get</span><br /><span style=\"color: blue;\"><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span>{<br /><span style=\"color: blue;\"><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span>if</span> (_viewDetailCommand == <span style=\"color: blue;\">null</span>)<br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span></span>_viewDetailCommand = <span style=\"color: blue;\">new</span> RelayCommand&lt;<span style=\"color: blue;\">string</span>&gt;(<br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span></span></span>p =&gt;<br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span></span></span>{<br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span></span></span></span>AppMessages.ViewDetailMessage.QueueMessageAndNavigate(p, ViewTypes.DetailView);<br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span></span></span>});<br /><span style=\"color: blue;\"><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span>return</span> _viewDetailCommand;<br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span>}<br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span>}</p>\n<p>Then in the ctor of the ViewModel I've navigated to I call this:</p>\n<p>\n<p>&nbsp;</p>\n</p>\n<p><span style=\"color: blue;\">\n<div style=\"color: black; background-color: white;\">\n<pre>AppMessages.ViewDetailMessage.Register(<span style=\"color: blue;\">this</span>, OnViewDetail);</pre>\n<pre>AppMessages.MessageQueue.Instance.ReleaseMessagesFromQueue&lt;AppMessages.ViewDetailMessage&gt;();</pre>\n</div>\n</span></p>\n<p>&nbsp;</p>\n<p>Here is the message and an interface to facilitate the \"delayed\" execution of the Send until after the ViewModel is loaded:</p>\n<p><span style=\"color: blue;\"><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span>public</span> <span style=\"color: blue;\">interface</span> IQueueableMessage<br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span>{<br /><span style=\"color: blue;\"><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span>void</span> ReleaseFromQueue();<br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span>}</p>\n<p><span style=\"color: blue;\"><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span>public</span> <span style=\"color: blue;\">class</span> ViewDetailMessage : AppMessageBase, IQueueableMessage<br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span>{<br /><span style=\"color: blue;\"><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span>private</span> <span style=\"color: blue;\">string</span> recordNumber { <span style=\"color: blue;\">get</span>; <span style=\"color: blue;\">set</span>; }<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br /><span style=\"color: blue;\"><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span>public</span> ViewDetailMessage() : <span style=\"color: blue;\">base</span>(MessageTypes.ViewDetail) { }<br /><br /><span style=\"color: blue;\"><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span>public</span> <span style=\"color: blue;\">static</span> <span style=\"color: blue;\">void</span> QueueMessageAndNavigate(<span style=\"color: blue;\">string</span> recordNumber, <span style=\"color: blue;\">string</span> viewType)<br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span>{<br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span>ViewDetailMessage _msg = <span style=\"color: blue;\">new</span> ViewDetailMessage();<br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span>_msg.recordNumber = recordNumber;<br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span>MessageQueue.Instance.AddMessageToQueue(_msg);<br /><br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span>NavigateMessage.Send(viewType);<br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span>}<br /><span style=\"color: blue;\"><span style=\"color: blue;\"><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&nbsp;&nbsp;&nbsp;&nbsp; </span>public</span> <span style=\"color: blue;\">static</span> <span style=\"color: blue;\">void</span> Register(<span style=\"color: blue;\">object</span> recipient, Action&lt;<span style=\"color: blue;\">string</span>&gt; action)<br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span>{<br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span>Messenger.Default.Register&lt;<span style=\"color: blue;\">string</span>&gt;(recipient, MessageTypes.ViewDetail, action);<br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span>}<br /><span style=\"color: blue;\"><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span>public</span> <span style=\"color: blue;\">static</span> <span style=\"color: blue;\">void</span> Send(<span style=\"color: blue;\">string</span> recordNumber)<br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span>{<br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span>Messenger.Default.Send&lt;<span style=\"color: blue;\">string</span>&gt;(recordNumber, MessageTypes.ViewDetail);<br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span>}<br /><span style=\"color: blue;\"><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span>public</span> <span style=\"color: blue;\">void</span> ReleaseFromQueue()<br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span>{<br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span>ViewDetailMessage.Send(<span style=\"color: blue;\">this</span>.recordNumber);<br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span>}<br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span>}</p>\n<p>...and finally here is the MessageQueue code:</p>\n<p><span style=\"color: blue;\"><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span>public</span> <span style=\"color: blue;\">sealed</span> <span style=\"color: blue;\">class</span> MessageQueue<br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span>{<br /><span style=\"color: blue;\"><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span>private</span> List&lt;IQueueableMessage&gt; Queue = <span style=\"color: blue;\">new</span> List&lt;IQueueableMessage&gt;();<br /><br /><span style=\"color: blue;\"><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span>private</span> <span style=\"color: blue;\">static</span> <span style=\"color: blue;\">readonly</span> MessageQueue _instance = <span style=\"color: blue;\">new</span> MessageQueue();<br /><br /><span style=\"color: blue;\"><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span>public</span> <span style=\"color: blue;\">static</span> MessageQueue Instance<br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span>{<br /><span style=\"color: blue;\"><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span>get</span><br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span>{<br /><span style=\"color: blue;\"><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span></span>return</span> _instance;<br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span>}<br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span>}<br /><br /><span style=\"color: blue;\"><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span>private</span> MessageQueue() { }<br /><br /><span style=\"color: blue;\"><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span>public</span> <span style=\"color: blue;\">void</span> AddMessageToQueue&lt;T&gt;(T msg) <span style=\"color: blue;\">where</span> T : IQueueableMessage<br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span>{<br /><span style=\"color: blue;\"><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span>this</span>.Queue.Add(msg);<br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span>}<br /><br /><span style=\"color: blue;\"><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span>public</span> <span style=\"color: blue;\">void</span> ReleaseMessagesFromQueue&lt;T&gt;() <span style=\"color: blue;\">where</span> T : IQueueableMessage<br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span>{<br /><span style=\"color: blue;\"><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span>this</span>.Queue.OfType&lt;T&gt;().ToList().ForEach(<br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span></span>m =&gt; {<br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span></span></span>m.ReleaseFromQueue();<br /><span style=\"color: blue;\"><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span></span></span>this</span>.Queue.Remove(m);<br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span>});<br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span>}<br /><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp;&nbsp; </span>}</p>\n<div style=\"background-color: white; color: black;\">\n<pre><div style=\"background-color: white; color: black;\">\r\n</div>\r\n</pre>\n</div>",
    "PostedDate": "2011-08-12T09:30:54.43-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]
[
  {
    "Id": "945082",
    "ThreadId": "404080",
    "Html": "\r\n<p>Hi,</p>\r\n<p>I tried to use the ObservableObject (WPF4, 4.1.24.16313) for a small model, which has to be serialized. But I got a Runtime.Serialization.SerializationException:</p>\r\n<p>The german message is:</p>\r\n<p>Der Typ &quot;GalaSoft.MvvmLight.ObservableObject&quot; in Assembly &quot;GalaSoft.MvvmLight.WPF4, Version=4.1.24.16313, Culture=neutral, PublicKeyToken=63eb5c012e0b3c1c&quot; ist nicht als serialisierbar gekennzeichnet.</p>\r\n<p>Which means: The typ ObservableObject ... is not marked as serializable.</p>\r\n<p>If I follow the MIX 11 video and thought that ObservableObject should be serializable. First the &quot;Friend class&quot; should be small and serializable and at about 10:00 min it inherits from ObservableObject.</p>\r\n<p>See also: http://mvvmlight.codeplex.com/discussions/349115</p>\r\n<div style=\"white-space:normal\"><span>lbugnion, </span><span title=\"21.05.2012 08:54:40\">May 21 at 8:54 AM</span></div>\r\n<div style=\"white-space:normal\">\r\n<p><em>The choice to work with INPC on the Model is driven by simplicity. Using a DO there is overkill because DOs are quite heavy and &quot;drag&quot; with them a lot of features that only make sense on a UI. For instance,\r\n<strong>DOs are not serializable while INPC implementations are</strong>, of course.</em></p>\r\n<p><strong><em>In MVVM Light V4, you can use the ObservableObject class and derive from this.</em></strong></p>\r\n</div>\r\n<p>Is this a misunderstanding or a bug?</p>\r\n<p>Best regards,</p>\r\n<p>Mike</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2012-11-21T04:13:06.33-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "945107",
    "ThreadId": "404080",
    "Html": "\r\n<div>\r\n<p><a name=\"_MailEndCompose\"><span style=\"font-size:11.0pt; font-family:\">Hi,</span></a></p>\r\n<p><span style=\"font-size:11.0pt; font-family:\"></span></p>\r\n<p><span style=\"font-size:11.0pt; font-family:\">The concept of being serializable is an interesting issue. In my presentation, the object is serialized using a serializer I wrote, which does not require specific attributes. However the built in serializers\r\n in .NET choke when the base classes are not marked as serializable. Honestly I never understood Microsoft’s need for that. It would be much better to assume that classes are serializable, unless marked otherwise. If you use other widespread serializers such\r\n as JSON.NET for instance, the policy there is to serialize everything public, unless it is marked as “not serializable”.</span></p>\r\n<p><span style=\"font-size:11.0pt; font-family:\"></span></p>\r\n<p><span style=\"font-size:11.0pt; font-family:\">Unfortunately, the built in serializers do not do that, and so the burden is on every framework maker to add the series of attributes needed to palliate that shortcoming.</span></p>\r\n<p><span style=\"font-size:11.0pt; font-family:\"></span></p>\r\n<p><span style=\"font-size:11.0pt; font-family:\">Right now, ObservableObject does not carry these attributes. Mostly, people who work in applications using MVVM Light did not feel that need, because we typically don’t use the built in serializers. They are slow\r\n and not very friendly. I see two possibilities in your scenario:</span></p>\r\n<p><span style=\"font-size:11.0pt; font-family:\"></span></p>\r\n<p style=\"text-indent:-18.0pt\"><span style=\"font-size:11.0pt; font-family:\"><span style=\"\">-<span style=\"font:7.0pt\">\r\n</span></span></span><span style=\"font-size:11.0pt; font-family:\">Either use a modern serializer such as JSON.NET or</span></p>\r\n<p style=\"text-indent:-18.0pt\"><span style=\"font-size:11.0pt; font-family:\"><span style=\"\">-<span style=\"font:7.0pt\">\r\n</span></span></span><span style=\"font-size:11.0pt; font-family:\">Build your own ObservableObject, which is really quite easy. In fact you can find and modify the code on the MVVM Light site on Codeplex.</span></p>\r\n<p><span style=\"font-size:11.0pt; font-family:\"></span></p>\r\n<p><span style=\"font-size:11.0pt; font-family:\">I might eventually mark ObservableObject as serializable, but I am not sure I will. Once I add this attribute, then I will get requests for others and I am not sure I want to promote the usage of the inferior\r\n serializers that are built into .NET.</span></p>\r\n<p><span style=\"font-size:11.0pt; font-family:\"></span></p>\r\n<p><span style=\"font-size:11.0pt; font-family:\">Hopefully this helps a bit</span></p>\r\n<p><span style=\"font-size:11.0pt; font-family:\">Laurent</span><span style=\"font-size:11.0pt; font-family:\"></span></p>\r\n<p><span style=\"font-size:11.0pt; font-family:\"></span></p>\r\n<div>\r\n<div style=\"border:none; border-top:solid #E1E1E1 1.0pt; padding:3.0pt 0cm 0cm 0cm\">\r\n<p><b><span style=\"font-size:11.0pt; font-family:\">From:</span></b><span style=\"font-size:11.0pt; font-family:\"> mike969 [email removed]\r\n<br>\r\n<b>Sent:</b> Wednesday, 21 November, 2012 13:13<br>\r\n<b>To:</b> laurent@galasoft.ch<br>\r\n<b>Subject:</b> ObservableObject is not marked as serializable? [mvvmlight:404080]</span></p>\r\n</div>\r\n</div>\r\n<p></p>\r\n<p><span style=\"font-size:9.0pt; font-family:\">From: mike969</span></p>\r\n<div id=\"ThreadNotificationPostBody\" style=\"margin-bottom:24.0pt\">\r\n<p><span style=\"font-size:9.0pt; font-family:\">Hi,</span></p>\r\n<p><span style=\"font-size:9.0pt; font-family:\">I tried to use the ObservableObject (WPF4, 4.1.24.16313) for a small model, which has to be serialized. But I got a Runtime.Serialization.SerializationException:</span></p>\r\n<p><span style=\"font-size:9.0pt; font-family:\">The german message is:</span></p>\r\n<p><span style=\"font-size:9.0pt; font-family:\">Der Typ &quot;GalaSoft.MvvmLight.ObservableObject&quot; in Assembly &quot;GalaSoft.MvvmLight.WPF4, Version=4.1.24.16313, Culture=neutral, PublicKeyToken=63eb5c012e0b3c1c&quot; ist nicht als serialisierbar gekennzeichnet.</span></p>\r\n<p><span style=\"font-size:9.0pt; font-family:\">Which means: The typ ObservableObject ... is not marked as serializable.</span></p>\r\n<p><span style=\"font-size:9.0pt; font-family:\">If I follow the MIX 11 video and thought that ObservableObject should be serializable. First the &quot;Friend class&quot; should be small and serializable and at about 10:00 min it inherits from ObservableObject.</span></p>\r\n<p><span style=\"font-size:9.0pt; font-family:\">See also: <a href=\"http://mvvmlight.codeplex.com/discussions/349115\">\r\nhttp://mvvmlight.codeplex.com/discussions/349115</a></span></p>\r\n<div>\r\n<p><span style=\"font-size:9.0pt; font-family:\">lbugnion, May 21 at 8:54 AM</span></p>\r\n</div>\r\n<div>\r\n<p><em><span style=\"font-size:9.0pt; font-family:\">The choice to work with INPC on the Model is driven by simplicity. Using a DO there is overkill because DOs are quite heavy and &quot;drag&quot; with them a lot of features that only make sense on a UI. For instance,\r\n</span></em><strong><i><span style=\"font-size:9.0pt; font-family:\">DOs are not serializable while INPC implementations are</span></i></strong><em><span style=\"font-size:9.0pt; font-family:\">, of course.</span></em><span style=\"font-size:9.0pt; font-family:\"></span></p>\r\n<p><em><b><span style=\"font-size:9.0pt; font-family:\">In MVVM Light V4, you can use the ObservableObject class and derive from this.</span></b></em><span style=\"font-size:9.0pt; font-family:\"></span></p>\r\n</div>\r\n<p><span style=\"font-size:9.0pt; font-family:\">Is this a misunderstanding or a bug?</span></p>\r\n<p><span style=\"font-size:9.0pt; font-family:\">Best regards,</span></p>\r\n<p><span style=\"font-size:9.0pt; font-family:\">Mike</span></p>\r\n<p><span style=\"font-size:9.0pt; font-family:\"></span></p>\r\n</div>\r\n</div>\r\n",
    "PostedDate": "2012-11-21T05:29:02.333-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "945153",
    "ThreadId": "404080",
    "Html": "\r\n<p>Hello Laurent,</p>\r\n<p>thank you for your fast response (and - of course - for the mvvm light toolkit).</p>\r\n<p>Ok, now its clear. So writing my own ObservableObject shouldn't be to hard.</p>\r\n<p>The info about the built in serializers is interesting. I have to save large datafiles with a lot of different object types (sometimes &gt; 50MB). I use the built in BinaryFormatter. Getting a fast serializer which makes smaller files would be nice.</p>\r\n<p>&nbsp;</p>\r\n<p>Best regards,</p>\r\n<p>Mike</p>\r\n",
    "PostedDate": "2012-11-21T06:47:45.347-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "945161",
    "ThreadId": "404080",
    "Html": "\r\n<div style=\"font-family:Calibri,'Segoe UI',Meiryo,'Microsoft YaHei UI','Microsoft JhengHei UI','Malgun Gothic','Khmer UI','Nirmala UI',Tunga,'Lao UI',Ebrima,sans-serif; font-size:16px\">\r\n<div>For speed, I like JSON.NET’s binary serializer. It creates BSON (binary JSON) and is really fast. It’s be interesting to time it against the one you are using.</div>\r\n<div></div>\r\n<div>Cheers</div>\r\n<div>Laurent</div>\r\n<div>\r\n<div></div>\r\n<div>Sent from Windows Mail</div>\r\n<div></div>\r\n</div>\r\n<div style=\"border-top-color:rgb(225,225,225); border-top-width:1px; border-top-style:solid\">\r\n<strong>From:</strong> mike969<br>\r\n<strong>Sent:</strong> ‎November‎ ‎21‎, ‎2012 ‎15‎:‎47<br>\r\n<strong>To:</strong> laurent@galasoft.ch<br>\r\n<strong>Subject:</strong> Re: ObservableObject is not marked as serializable? [mvvmlight:404080]<br>\r\n</div>\r\n<div></div>\r\n<p>From: mike969</p>\r\n<div id=\"ThreadNotificationPostBody\">\r\n<p>Hello Laurent,</p>\r\n<p>thank you for your fast response (and - of course - for the mvvm light toolkit).</p>\r\n<p>Ok, now its clear. So writing my own ObservableObject shouldn't be to hard.</p>\r\n<p>The info about the built in serializers is interesting. I have to save large datafiles with a lot of different object types (sometimes &gt; 50MB). I use the built in BinaryFormatter. Getting a fast serializer which makes smaller files would be nice.</p>\r\n<p></p>\r\n<p>Best regards,</p>\r\n<p>Mike</p>\r\n</div>\r\n</div>\r\n",
    "PostedDate": "2012-11-21T07:04:12.263-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]
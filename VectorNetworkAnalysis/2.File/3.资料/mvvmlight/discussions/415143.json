[
  {
    "Id": "967103",
    "ThreadId": "415143",
    "Html": "\r\n<p>Thanks for StackOverFlow, I got the first response. I tried and it worked. I did not use attached behavior. I used EventTrigger.</p>\r\n<p>xmlns:interactivity=&quot;clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity&quot;</p>\r\n<pre><code><span>&lt;interactivity:Interaction.Triggers&gt;</span><span>\n    </span><span>&lt;!-- In order to Call Cleanup in ViewModel to unregister Messenger.  --&gt;</span><span>\n    </span><span>&lt;interactivity:EventTrigger</span><span> </span><span>EventName</span><span>=</span><span>&quot;Unloaded&quot;</span><span>&gt;</span><span>\n        </span><span>&lt;interactivity:InvokeCommandAction</span><span> </span><span>Command</span><span>=</span><span>&quot;{Binding ViewUnloadCommand}&quot;</span><span> </span><span>/&gt;</span><span>\n    </span><span>&lt;/interactivity:EventTrigger&gt;</span><span>\n</span><span>&lt;/interactivity:Interaction.Triggers&gt;</span></code></pre>\r\n<p>Then my view will call the command in ViewModel to unregister the Messenger when this view is unloaded.</p>\r\n<p>Thanks again.</p>\r\n<p><span lang=\"EN-US\" style=\"font-size:12pt\">------------------------------------------------------------------------------------------------------<br>\r\n<br>\r\nThanks Laurent for your fantastic work on MVVM light.</span><span style=\"font-size:12pt\">&nbsp;</span></p>\r\n<p><span lang=\"EN-US\" style=\"font-size:12pt\">I've been working on a WPF project using this framework. Then I encountered this issue. I tried to search it on Google, MSDN and StackOverFlow. I found this solution when Messgener is used between ViewModel and View.\r\n I would do something like this in CodeBehind file, to call Unregister in Unloaded event handler.<br>\r\n<br>\r\n</span><span lang=\"EN-US\" style=\"font-size:12pt\">&nbsp;</span>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span lang=\"EN-US\" style=\"color:blue\"> public</span> FinishedTodoItemTreeViewUserControl()<br>\r\n&nbsp; &nbsp; &nbsp; &nbsp; {<br>\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; InitializeComponent();<br>\r\n<br>\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span lang=\"EN-US\" style=\"color:#2b91af\"> Messenger</span>.Default.Register&lt;<span lang=\"EN-US\" style=\"color:#2b91af\">DialogMessage</span>&gt;(<span lang=\"EN-US\" style=\"color:blue\">this</span>,\r\n<span lang=\"EN-US\" style=\"color:#2b91af\">FinishedTodoItemTreeViewModel</span>.DeleteAllDoneItemsConfirmMessageToken, dialog =&gt;<br>\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br>\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span lang=\"EN-US\" style=\"color:blue\">var</span> confirmResult =\r\n<span lang=\"EN-US\" style=\"color:#2b91af\">MessageBox</span>.Show(dialog.Content, dialog.Caption, dialog.Button, dialog.Icon);<br>\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; dialog.ProcessCallback(confirmResult);<br>\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });<br>\r\n&nbsp; &nbsp; &nbsp; &nbsp; }<br>\r\n<br>\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span lang=\"EN-US\" style=\"color:blue\"> private</span>\r\n<span lang=\"EN-US\" style=\"color:blue\">void</span> currentControl_Unloaded(<span lang=\"EN-US\" style=\"color:blue\">object</span> sender,\r\n<span lang=\"EN-US\" style=\"color:#2b91af\">RoutedEventArgs</span> e)<br>\r\n&nbsp; &nbsp; &nbsp; &nbsp; {<br>\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span lang=\"EN-US\" style=\"color:#2b91af\"> Messenger</span>.Default.Unregister(<span lang=\"EN-US\" style=\"color:blue\">this</span>);<br>\r\n&nbsp; &nbsp; &nbsp; &nbsp; }<br>\r\n<br>\r\n<span style=\"font-size:12pt\"><span style=\"font-size:small\">But when I am doing this in ViewModel, when I should call Unregister or Cleanup? Because I still need to receive this message again when it happens. But I don't want to receive this message&nbsp;multiple&nbsp;times\r\n with just one shot.</span><br>\r\n<br>\r\n</span><span style=\"font-size:12pt\">Thanks in advance.</span><span style=\"font-size:12pt\">&nbsp;</span></p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span lang=\"EN-US\" style=\"color:gray\">\r\n///</span><span lang=\"EN-US\" style=\"color:green\"> </span><span lang=\"EN-US\" style=\"color:gray\">&lt;summary&gt;<br>\r\n</span>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span lang=\"EN-US\" style=\"color:gray\"> ///</span><span lang=\"EN-US\" style=\"color:green\"> Register to be observer of TodoItems change notification receiver.<br>\r\n</span>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span lang=\"EN-US\" style=\"color:gray\"> ///</span><span lang=\"EN-US\" style=\"color:green\">\r\n</span><span lang=\"EN-US\" style=\"color:gray\">&lt;/summary&gt;<br>\r\n</span>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span lang=\"EN-US\" style=\"color:blue\"> private</span>\r\n<span lang=\"EN-US\" style=\"color:blue\">void</span> RegisterTodoItemsChangedNotification()<br>\r\n&nbsp; &nbsp; &nbsp; &nbsp; {<br>\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span lang=\"EN-US\" style=\"color:#2b91af\"> Messenger</span>.Default.Register&lt;<span lang=\"EN-US\" style=\"color:#2b91af\">UnfinishedTodoItemTreeViewModel</span>&gt;(<span lang=\"EN-US\" style=\"color:blue\">this</span>,\r\n<span lang=\"EN-US\" style=\"color:#2b91af\">UnfinishedTodoItemTreeViewModel</span>.RelatedTodoItemsChangedMessageToken, itemTreeViewModel =&gt;<br>\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br>\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span lang=\"EN-US\" style=\"color:blue\">if</span> (itemTreeViewModel.ActionCategory ==\r\n<span lang=\"EN-US\" style=\"color:#2b91af\">UnfinishedTodoItemTreeViewModel</span>.<span lang=\"EN-US\" style=\"color:#2b91af\">TodoItemActionCategory</span>.Done)<br>\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br>\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; DecreaseRelatedFilterTodoItemCount(itemTreeViewModel.FilterType);<br>\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; AllTodoItemCount -= 1;<br>\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br>\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span lang=\"EN-US\" style=\"color:blue\">else</span>\r\n<span lang=\"EN-US\" style=\"color:blue\">if</span> (itemTreeViewModel.ActionCategory ==\r\n<span lang=\"EN-US\" style=\"color:#2b91af\">UnfinishedTodoItemTreeViewModel</span>.<span lang=\"EN-US\" style=\"color:#2b91af\">TodoItemActionCategory</span>.Undone)<br>\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br>\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; IncreaseRelatedFilterTodoItemCount(itemTreeViewModel.FilterType);<br>\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; AllTodoItemCount &#43;= 1;<br>\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br>\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });<br>\r\n&nbsp; &nbsp; &nbsp; &nbsp; }</p>\r\n",
    "PostedDate": "2012-12-21T07:16:37.427-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]
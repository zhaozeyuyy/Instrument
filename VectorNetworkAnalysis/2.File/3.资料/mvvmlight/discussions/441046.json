[
  {
    "Id": "1033528",
    "ThreadId": "441046",
    "Html": "Hi,\r<br />\nI asked this question in several places with no answer, so i hope to find the answer here.\r<br />\nI develop Prism+MEF application based on WPF+MVVM, where there are many DataGrids so i build DataGridStyle to be applied for all DataGrids in all modules. The style add Filter Text Box in the Columns Headers, and i used MVVM Light EventToCommand to trigger TextChanged event when the Text Box text is changed like this: (this code exist in DataGridStyle Resource Dictionary)<br />\n<pre><code> &lt;!--Filter Text Box--&gt;\n                            &lt;TextBox x:Name=&quot;filterTextBox&quot; HorizontalAlignment=&quot;Right&quot; \n                                         MinWidth=&quot;25&quot; Height=&quot;Auto&quot; OpacityMask=&quot;Black&quot; Visibility=&quot;Collapsed&quot; \n                                         Text=&quot;&quot; \n                                         TextWrapping=&quot;Wrap&quot; Grid.Column=&quot;0&quot; Grid.ColumnSpan=&quot;1&quot;&gt;\n                                         \n                                &lt;i:Interaction.Triggers&gt;\n                                    &lt;i:EventTrigger EventName=&quot;TextChanged&quot;&gt;\n\n                                        &lt;cmd:EventToCommand  Command=&quot;{Binding local:FilteringDataGrid.HandleTextChanged}&quot;\n                                                             PassEventArgsToCommand=&quot;True&quot;\n                                                             CommandParameter=&quot;{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TextBox}}, Path=Name}&quot;/&gt;\n                                       \n                                    &lt;/i:EventTrigger&gt;\n                                &lt;/i:Interaction.Triggers&gt;\n                                \n                            &lt;/TextBox&gt;</code></pre>\n\nThen i handled the TextChangedCommand in FilteringDataGrid class using Attached Behavior :<br />\n<pre><code>#region TextChangedCommand----------------------------------------------------------------------------------------------\n\n        static ICommand command; //1\n\n        public static ICommand GetHandleTextChanged(TextBox target)\n        {\n            \n            return (ICommand)target.GetValue(HandleTextChangedProperty);\n\n        }\n\n        public static void SetHandleTextChanged(TextBox target, ICommand value)\n        {\n            \n            target.SetValue(FilteringDataGrid.HandleTextChangedProperty, value);\n\n        }\n\n       \n        public static readonly DependencyProperty HandleTextChangedProperty =\n            DependencyProperty.RegisterAttached(&quot;HandleTextChanged&quot;,\n                                                 typeof(ICommand),\n                                                 typeof(FilteringDataGrid),\n                                                 new UIPropertyMetadata(new PropertyChangedCallback(TextChangedChanged)));\n        \n\n        static void TextChangedChanged(DependencyObject target, DependencyPropertyChangedEventArgs e)\n        {\n           \n            TextBox element = target as TextBox;\n\n            if (element != null)\n            {\n                if (e.NewValue != null)\n                {\n                    element.TextChanged += Element_TextChanged;\n                }\n                else\n                {\n                    element.TextChanged -= Element_TextChanged;\n                }\n            }\n\n        }\n        \n        static void Element_TextChanged(object sender, TextChangedEventArgs e)\n        {\n            \n            // Get the textbox\n            TextBox filterTextBox = e.OriginalSource as TextBox;\n\n            // Get the header of the textbox\n            DataGridColumnHeader header = TryFindParent&lt;DataGridColumnHeader&gt;(filterTextBox);\n            if (header != null)\n            {\n                //UpdateFilter(this.filterTextBox, header);\n                //this.ApplyFilters();\n            }\n        }\n\n\n        #endregion\n</code></pre>\n\nAnd the View that contains the Grid:<br />\n<pre><code> &lt;DataGrid  ItemsSource=&quot;{Binding Subsystems,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}&quot;\n                   SelectedItem=&quot;{Binding Path=SelectedSubsystem, Mode=TwoWay}&quot;                        \n                   Name=&quot;SubsystemAllDataGrid&quot;              \n                   Style=&quot;{StaticResource DataGridStyle}&quot;\n                   \n                   Grid.Row=&quot;2&quot;&gt;\n            \n\n            &lt;DataGrid.Columns&gt;\n                &lt;DataGridTextColumn Header=&quot;Serial&quot; Binding=&quot;{Binding Path=Serial, Mode=TwoWay}&quot;&gt;&lt;/DataGridTextColumn&gt;\n                &lt;DataGridTextColumn Header=&quot;Type&quot; Binding=&quot;{Binding Path=Type, Mode=TwoWay}&quot;&gt;&lt;/DataGridTextColumn&gt;\n                &lt;DataGridTextColumn Header=&quot;System&quot; Binding=&quot;{Binding Path=System, Mode=TwoWay}&quot;&gt;&lt;/DataGridTextColumn&gt;\n                &lt;DataGridTextColumn Header=&quot;SubsystemNo&quot;  Binding=&quot;{Binding Path=SubsystemNo, Mode=TwoWay}&quot;&gt;&lt;/DataGridTextColumn&gt;\n                &lt;DataGridTextColumn Header=&quot;Description&quot; Binding=&quot;{Binding Path=Description, Mode=TwoWay}&quot;&gt;&lt;/DataGridTextColumn&gt;\n                &lt;DataGridTextColumn Header=&quot;Scope&quot; Binding=&quot;{Binding Path=Scope, Mode=TwoWay}&quot;&gt;&lt;/DataGridTextColumn&gt;\n                &lt;DataGridTextColumn Header=&quot;Area&quot; Binding=&quot;{Binding Path=Area, Mode=TwoWay}&quot;&gt;&lt;/DataGridTextColumn&gt;\n                &lt;DataGridTextColumn Header=&quot;Priority&quot; Binding=&quot;{Binding Path=Priority, Mode=TwoWay}&quot;&gt;&lt;/DataGridTextColumn&gt;\n                &lt;DataGridTextColumn Header=&quot;DossierLocation&quot; Binding=&quot;{Binding Path=DossierLocation, Mode=TwoWay}&quot;&gt;&lt;/DataGridTextColumn&gt;\n                &lt;DataGridTextColumn Header=&quot;Parts&quot; Binding=&quot;{Binding Path=Parts, Mode=TwoWay}&quot;&gt;&lt;/DataGridTextColumn&gt;\n                &lt;DataGridTextColumn Header=&quot;Status&quot; Binding=&quot;{Binding Path=Status, Mode=TwoWay}&quot;&gt;&lt;/DataGridTextColumn&gt;\n                &lt;DataGridTextColumn Header=&quot;StatusDate&quot; Binding=&quot;{Binding Path=StatusDate, Mode=TwoWay}&quot;&gt;&lt;/DataGridTextColumn&gt;\n                &lt;DataGridTextColumn Header=&quot;MCDate&quot; Binding=&quot;{Binding Path=MCDate, Mode=TwoWay}&quot;&gt;&lt;/DataGridTextColumn&gt;\n                &lt;DataGridTextColumn Header=&quot;PlnMCDate&quot; Binding=&quot;{Binding Path=PlnMCDate, Mode=TwoWay}&quot;&gt;&lt;/DataGridTextColumn&gt;\n                &lt;DataGridTextColumn Header=&quot;Remark&quot; Binding=&quot;{Binding Path=Remark, Mode=TwoWay}&quot;&gt;&lt;/DataGridTextColumn&gt;\n\n            &lt;/DataGrid.Columns&gt;\n\n        &lt;/DataGrid&gt;\n\nThe problems are: When i enter filter text in the text box in one of the columns headers of the data grid nothing happen and break points at following points not hit:\n\n1-GetHandleTextChangedand SetHandleTextChanged\n\n2-The TextChangedChanged() method. (not Called)\nThe only breakpoint hit @ Attached Property statement \n\ni'm new to wpf so i'm sure there are faults in WPF or C# code..., so please help me fixing these faults.\n\nNote: i don't use code behind.\n\nThanks in advance\n</code></pre>\n\n",
    "PostedDate": "2013-04-21T03:27:15.373-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]
[
  {
    "Id": "1038656",
    "ThreadId": "442369",
    "Html": "How can I use Dispatcher Helper with Progress Bar in Mvvm. I'm accessing Ui Element defined in my viewmodel and I think dispatcherhelper will solved this, but it seems the progressbar was not updated when I ran the Backgroundworker with DispatcherHelper. Please help:\r<br />\n<br />\nhere's my code :\r<br />\n<br />\n  _worker = new BackgroundWorker() {<br />\n<pre><code>        WorkerReportsProgress = true,\n        WorkerSupportsCancellation = true\n    };\n\n\n    _grid = new Grid();\n    _worker.DoWork += (sender,e) =&gt; DispatcherHelper.UIDispatcher.Invoke(() =&gt; {\n        try{\n            var vWorker = (BackgroundWorker) sender;\n\n            ReportColumns = new List&lt;ReportColumn&gt;();\n            #region Set Report Item Column\n            for(var i = 1;i &lt;= _reportBal.ReportItemContent.Columns.Count - 1;i++) {\n                var vColumnsItems = ReportParser.ParseColumnAttributes(_reportBal.ReportItemContent.Columns[i].ColumnName);\n                var vColumn = new ReportColumn();\n                vColumn.DataType = vColumnsItems[0];\n                vColumn.Width = vColumnsItems[1];\n                vColumn.Header = vColumnsItems[2];\n                vColumn.DataField = vColumnsItems[2];\n                ReportColumns.Add(vColumn);\n            }\n\n            if(ReportColumns != null) {\n                for(int ctrCol = 0;ctrCol &lt;= ReportColumns.Count - 1;ctrCol++) {\n                    var sp = new StackPanel { Orientation = Orientation.Horizontal };\n                    _grid.ColumnDefinitions.Add(new ColumnDefinition {\n                        Width =\n                            new GridLength(Convert.ToDouble(ReportColumns[ctrCol].Width))\n                    });\n                    var tb = new TextBlock {\n                        Text = ReportColumns[ctrCol].DataField,\n                        FontWeight = FontWeights.DemiBold,\n                        Margin = new Thickness(8,0,8,0),\n                        TextWrapping = TextWrapping.Wrap\n                    };\n                    sp.Children.Add(tb);\n                    Grid.SetRow(sp,0);\n                    Grid.SetColumn(sp,ctrCol);\n                    _grid.Children.Add(sp);\n                }\n            }\n\n            #endregion</code></pre>\n\n_recordCount = _reportBal.ReportItemContent.Rows.Count;<br />\n<pre><code>            #region Set Report Item Row\n            GridHelper.SetRowCount(_grid,_reportBal.ReportItemContent.Rows.Count + 1);\n            for(int rRow = 0;rRow &lt;= _reportBal.ReportItemContent.Rows.Count - 1;rRow++) {\n\n                if(vWorker.CancellationPending) {\n                    e.Cancel = true;\n                    break;\n                }\n\n                for(int cCol = 0;cCol &lt;= ReportColumns.Count - 1;cCol++) {\n\n                    string vValue = _reportBal.ReportItemContent.Rows[rRow][cCol + 1].ToString(); ;\n\n                    var sp = new StackPanel { Orientation = Orientation.Horizontal };\n\n                    var tb = new TextBlock {\n                        Text = vValue,\n                        Width = double.Parse(ReportColumns[cCol].Width),\n                        Margin = new Thickness(8,3,8,3),\n                        TextWrapping = TextWrapping.Wrap\n                    };\n\n                    sp.Children.Add(tb);\n\n                    Grid.SetColumn(sp,cCol);\n                    Grid.SetRow(sp,rRow + 1);\n                    _grid.Children.Add(sp);\n\n\n                }\n\n                if(vWorker.WorkerReportsProgress) {\n\n                    int vPercentComplete = (int)((float)rRow / (float)_recordCount * 100);\n                    string updateMessage =\n                        string.Format(&quot;Record(s) {0} of {1}&quot;,rRow,_recordCount);\n                    vWorker.ReportProgress(vPercentComplete,updateMessage);\n                }\n            }\n\n            #endregion\n\n            e.Result = _grid;\n            //_reportItemContent = _grid;\n        }\n        catch(Exception exception) {\n            throw new Exception(&quot;#Error: Error parsing with report items&quot; + Environment.NewLine +\n                Environment.NewLine + &quot;#Internal Error: &quot; + exception.Message,exception);\n\n        }\n    });\n    _worker.ProgressChanged += (s,e) =&gt; DispatcherHelper.RunAsync((() =&gt;{\n        ProgressPercentage = e.ProgressPercentage;\n        Output = (string)e.UserState;\n    }));\n\n    _worker.RunWorkerCompleted += (s,e) =&gt; /*DispatcherHelper.UIDispatcher.Invoke((() =&gt;*/ {\n        if(e.Error != null) throw new Exception(&quot;Error Arg&quot;);\n        _reportItemContent = (Grid)e.Result;\n    };</code></pre>\n\n",
    "PostedDate": "2013-05-02T09:43:38.263-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]
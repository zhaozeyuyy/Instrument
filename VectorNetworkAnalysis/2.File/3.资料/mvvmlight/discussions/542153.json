[
  {
    "Id": "1233722",
    "ThreadId": "542153",
    "Html": "I have a LINQ to SQL relational database on Windows Phone 8, and I'm implementing MVVM using MVVM Light. Can someone please explain the best way to get my db data context to my view models and/or data services? My view model locator code is set like so:<br />\n<pre><code>static ViewModelLocator()\n        {\n            ServiceLocator.SetLocatorProvider(() =&gt; SimpleIoc.Default);\n\n            if (ViewModelBase.IsInDesignModeStatic)\n            {\n                SimpleIoc.Default.Register&lt;IDataService, Design.DesignDataService&gt;();\n                SimpleIoc.Default.Register&lt;IDetailsDataService, Design.DetailsDesignDataService&gt;();\n            }\n            else\n            {\n                SimpleIoc.Default.Register&lt;IDataService, DataService&gt;();\n                SimpleIoc.Default.Register&lt;IDetailsDataService, DetailsDataService&gt;();\n            }\n\n\n            SimpleIoc.Default.Register&lt;MainViewModel&gt;();\n            // Ensure VM\n            var main = SimpleIoc.Default.GetInstance&lt;MainViewModel&gt;();\n\n            SimpleIoc.Default.Register&lt;DetailsViewModel&gt;();\n            // Ensure VM\n            var details = SimpleIoc.Default.GetInstance&lt;DetailsViewModel&gt;();\n\n            main.NavigationService = new NavigationService();\n            details.NavigationService = new NavigationService();\n        }\n\n        /// &lt;summary&gt;\n        /// Gets the Main property.\n        /// &lt;/summary&gt;\n        [System.Diagnostics.CodeAnalysis.SuppressMessage(&quot;Microsoft.Performance&quot;,\n            &quot;CA1822:MarkMembersAsStatic&quot;,\n            Justification = &quot;This non-static member is needed for data binding purposes.&quot;)]\n        public MainViewModel Main\n        {\n            get\n            {\n                return ServiceLocator.Current.GetInstance&lt;MainViewModel&gt;();\n            }\n        }\n\n        /// &lt;summary&gt;\n        /// Gets the Details property.\n        /// &lt;/summary&gt;\n        [System.Diagnostics.CodeAnalysis.SuppressMessage(&quot;Microsoft.Performance&quot;,\n            &quot;CA1822:MarkMembersAsStatic&quot;,\n            Justification = &quot;This non-static member is needed for data binding purposes.&quot;)]\n        public DetailsViewModel Details\n        {\n            get\n            {\n                return SimpleIoc.Default.GetInstance&lt;DetailsViewModel&gt;();\n            }\n        }</code></pre>\n\nI know this isn't a simple question, but I'd sure appreciate any help you can offer. <br />\n<br />\nThanks!<br />\n",
    "PostedDate": "2014-04-13T18:42:09.513-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1233875",
    "ThreadId": "542153",
    "Html": "Since you've registered the data service you can inject the data service into your view model constructor<br />\n<pre><code> public class MyViewModel : ViewModelBase\n    {\n        IDataService dataService; \n        public MyViewModel(IDataService dataService)\n        {\n            _dataService = dataService;\n\n            _customertypes =  _dataService.GetCustomerTypes() etc </code></pre>\n\nA reference to your data context or WCF service proxy should be in your data service.<br />\n",
    "PostedDate": "2014-04-14T05:59:50.51-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1234095",
    "ThreadId": "542153",
    "Html": "<strong>tazzer wrote:</strong><br />\n<blockquote>\nA reference to your data context or WCF service proxy should be in your data service.<br />\n</blockquote>\nYep. That's where I'm stuck. Everything I try seems to land me on &quot;XamlParseException: Cannot create instance of type ViewModelLocator.&quot; \r<br />\n<br />\n<em>wrinkles nose</em>\r<br />\n<br />\nHow do I add a reference to my data context in the data service? <br />\n",
    "PostedDate": "2014-04-14T15:48:54.773-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1236607",
    "ThreadId": "542153",
    "Html": "If you can't create an instance of ViewModelLocator there may a namespace issue in your App.XAML or something.<br />\n<pre><code>&lt;Application x:Class=&quot;Company.TestHarness.App&quot;\n             xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;\n             xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;\n             xmlns:vm=&quot;clr-namespace:Company.TestHarness.ViewModel&quot;\n             xmlns:d=&quot;http://schemas.microsoft.com/expression/blend/2008&quot;\n             xmlns:mc=&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;\n             StartupUri=&quot;View/MainWindow.xaml&quot;\n             mc:Ignorable=&quot;d&quot;&gt;\n    \n    &lt;Application.Resources&gt;\n        &lt;!--Global View Model Locator--&gt;\n        &lt;vm:ViewModelLocator x:Key=&quot;Locator&quot;\n                             d:IsDataSource=&quot;True&quot; /&gt;\n    &lt;/Application.Resources&gt;\n    </code></pre>\n\nYour locator class might look something like the following <br />\n<pre><code>using System;\n\nusing GalaSoft.MvvmLight;\nusing GalaSoft.MvvmLight.Ioc;\nusing Microsoft.Practices.ServiceLocation;\n\nusing Company.TestHarness.ViewModel;\nusing Company.TestHarness.Services;\n\nnamespace Company.TestHarness.ViewModel\n{\n\n    public class ViewModelLocator\n    {\n        static ViewModelLocator()\n        {\n            ServiceLocator.SetLocatorProvider(() =&gt; SimpleIoc.Default);\n\n            SimpleIoc.Default.Register&lt;IMyDataService, MyDataService&gt;();\n            \n\n            SimpleIoc.Default.Register&lt;MainViewModel&gt;();\n            SimpleIoc.Default.Register&lt;SomeOtherViewModel&gt;();\n        }\n\n        /// &lt;summary&gt;\n        /// Gets the Main property.\n        /// &lt;/summary&gt;\n        [System.Diagnostics.CodeAnalysis.SuppressMessage(&quot;Microsoft.Performance&quot;,\n            &quot;CA1822:MarkMembersAsStatic&quot;,\n            Justification = &quot;This non-static member is needed for data binding purposes.&quot;)]\n        public MainViewModel Main\n        {\n            get\n            {\n                return ServiceLocator.Current.GetInstance&lt;MainViewModel&gt;();\n            }\n        }\n\n        public UserViewModel Other\n        {\n            get\n            {\n                return ServiceLocator.Current.GetInstance&lt;SomeOtherViewModel&gt;();\n            }\n        }\n       \n\n        /// &lt;summary&gt;\n        /// Cleans up all the resources.\n        /// &lt;/summary&gt;\n        public static void Cleanup()\n        {\n\n            // Implements IDisposable\n            SimpleIoc.Default.Unregister&lt;IMyDataService&gt;();\n\n            SimpleIoc.Default.Unregister&lt;SomeOtherViewModel&gt;();\n            SimpleIoc.Default.Unregister&lt;MainViewModel&gt;();\n\n        }\n    }\n}\n</code></pre>\n\nMain View:<br />\n<pre><code>&lt;Window x:Class=&quot;Company.TestHarness.View.MainWindow&quot;\n        xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;\n        xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;\n        xmlns:d=&quot;http://schemas.microsoft.com/expression/blend/2008&quot;\n        xmlns:mc=&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;\n        xmlns:mvvm=&quot;clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WPF45&quot;\n        xmlns:views=&quot;clr-namespace:Company.TestHarness.View&quot;\n        mc:Ignorable=&quot;d&quot; \n        Height=&quot;500&quot;\n        Width=&quot;800&quot;\n        Title=&quot;Thindenach WPF Stuff&quot;\n        DataContext=&quot;{Binding Main, Source={StaticResource Locator}}&quot;&gt;</code></pre>\n\nA sample service is shown below, it's just test code and uses an ORM called LLBLGen but it's just a proxy class, that uses a WCF service, just use your data context and build up a data service.<br />\n<pre><code>using System;\nusing System.Data;\nusing System.Linq;\nusing System.Xml.Linq;\nusing System.Windows.Forms;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.ServiceModel;\n\nusing Company.DataServices.Security;\nusing Company.DataServices.Security.Helpers;\nusing Company.DataServices.Security.DAL.EntityClasses;\nusing Company.DataServices.Security.DAL.HelperClasses;\n\n{\n    public class MyDataService : IMyDataService, IDisposable\n    {\n\n        public MyDataService()\n        {\n            // NOTE: Config should come from configuration service or config file, this is just for test\n            EndpointAddress address = new EndpointAddress(&quot;http://Mydomain/SomeService.svc&quot;);\n            BasicHttpBinding binding = new BasicHttpBinding();\n            binding.MaxReceivedMessageSize = 2147483647;\n            binding.MaxBufferSize = 2147483647;\n            _secChannelFactory = new ChannelFactory&lt;ISecurityService&gt;(binding, address);\n        }\n\n        #region Implement IDisposable\n        protected virtual void Dispose(bool disposing)\n        {\n            if (!disposed)\n            {\n                if (disposing)\n                {\n                    if (_secChannelFactory != null)\n                    {\n                        if (_secChannelFactory.State == CommunicationState.Opened)\n                        {\n                            _secChannelFactory.Close();\n                        }\n                        _secChannelFactory = null;\n                    }\n                }\n                disposed = true;\n            }\n        }\n\n        public void Dispose()\n        {\n            Dispose(true);\n        }\n\n        #endregion\n\n\n\n        public EntityCollection GetUserSettings(string userid)\n        {\n            return (EntityCollection)ServiceCall&lt;IEntityCollection&gt;(x =&gt; GetUserSettings(userid));\n        }\n\n        public string GetScreenName(string userid)\n        {\n            return (string)ServiceCall&lt;string&gt;(x =&gt; GetScreenName(userid));\n        }\n\n        private static TResult ServiceCall&lt;TResult&gt;(Func&lt;ISecurityService, TResult&gt; codeBlock)\n        {\n            var proxy = (ISecurityService)_secChannelFactory.CreateChannel();\n            bool success = false;\n\n            TResult result;\n            try\n            {\n                result = codeBlock((ISecurityService)proxy);\n                ((IClientChannel)proxy).Close();\n                success = true;\n            }\n            catch (CommunicationException ce)\n            {\n                // do something\n            }\n            catch (Exception ex)\n            {\n                // do something\n            }\n            finally\n            {\n                if (!success)\n                {\n                    ((IClientChannel)proxy).Abort();\n                }\n            }\n\n            return result;\n        }\n\n        #region Private member vars\n\n        private bool disposed = false;\n        private static ChannelFactory&lt;ISecurityService&gt; _secChannelFactory = null;\n\n        #endregion\n    }\n}\n</code></pre>\n\nGood luck.<br />\n",
    "PostedDate": "2014-04-22T07:47:08.087-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1239707",
    "ThreadId": "542153",
    "Html": "Thanks for taking the time to respond, tazzer. I have it working now. I think. That ViewModelLocator is a speedy little thing, and I needed to get my db connection established sooner than I'd thought.\r<br />\n<br />\n<em>shrug</em>\r<br />\n<br />\nFirst app, first time using MVVM Light = lots of total noob moments. ;)<br />\n",
    "PostedDate": "2014-04-30T02:04:52.533-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]
[
  {
    "Id": "1263946",
    "ThreadId": "551024",
    "Html": "Hi! I am quite a newbie in WPF and I am creating a User Control that has a DataTemplate, which is Dynamically populated. This DataTemplate contains a bunch of controls like buttons and other DataGrids. I want to know how am I supposed to bind the button's command to a relaycommand in my ViewModel? Here are some of the code snippets:<br />\n<pre><code>&lt;UserControl.DataContext&gt;\n        &lt;Binding Path=&quot;UpdateDevices&quot;  Source=&quot;{StaticResource Locator}&quot;/&gt;\n &lt;/UserControl.DataContext&gt;\n&lt;DataTemplate x:Key=&quot;ListBoxDataTemplate&quot;&gt;\n            &lt;Border&gt;\n                &lt;Label Background=&quot;White&quot; HorizontalContentAlignment=&quot;Stretch&quot;&gt;\n                    &lt;StackPanel Width=&quot;Auto&quot; HorizontalAlignment=&quot;Stretch&quot;&gt;\n                        &lt;Grid HorizontalAlignment=&quot;Stretch&quot;&gt;\n                            &lt;Grid.ColumnDefinitions&gt;\n                               ....\n                            &lt;/Grid.ColumnDefinitions&gt;\n                            &lt;Grid.RowDefinitions&gt;\n                                ...\n                            &lt;/Grid.RowDefinitions&gt;\n                            &lt;Button Grid.Column=&quot;0&quot; Grid.Row=&quot;0&quot; Width=&quot;35&quot; Height=&quot;35&quot; Background=&quot;White&quot; Foreground=&quot;White&quot; \n                                    BorderThickness=&quot;0&quot; BorderBrush=&quot;White&quot; \n                                    Command=&quot;{Binding Source={StaticResource Locator}, Path=UpdateDevices.ShowHideEntitledContentsCommand}&quot;&gt;\n                                &lt;StackPanel&gt;\n                                    &lt;Image Source=&quot;../Assets/Buttons/plus-button.png&quot; Width=&quot;30&quot; Height=&quot;30&quot;/&gt;\n                                &lt;/StackPanel&gt;\n                            &lt;/Button&gt;\n                            &lt;TextBlock Grid.Column=&quot;1&quot; Grid.Row=&quot;0&quot; Text=&quot;{Binding Model.Name}&quot; FontSize=&quot;20&quot;/&gt;\n                            &lt;Image Grid.Column=&quot;2&quot; Grid.Row=&quot;0&quot; Height=&quot;45&quot; Width=&quot;45&quot; Source=&quot;../Assets/Buttons/handheld.png&quot;/&gt;\n                            &lt;TextBlock Grid.Column=&quot;3&quot; Grid.Row=&quot;0&quot; Grid.ColumnSpan=&quot;3&quot; Text=&quot;{Binding Model.AvailableMemoryStorage}&quot;/&gt;\n                            &lt;Button Grid.Column=&quot;3&quot; Grid.Row=&quot;2&quot; Content=&quot;Manage Memory&quot; IsEnabled=&quot;True&quot; \n                                    Command=&quot;{Binding Source={StaticResource Locator}, Path=UpdateDevice.ManageMemoryCommand}&quot; /&gt;\n                      &lt;/Grid&gt;\n                        &lt;!--DataGrid for Allowed Contents--&gt;\n                        &lt;StackPanel Visibility=&quot;{Binding AllowedContentVisibility}&quot;&gt;\n                            &lt;TextBlock Text=&quot;Available Updates&quot; FontWeight=&quot;Bold&quot;/&gt;\n                            &lt;DataGrid ItemsSource=&quot;{Binding Model.AllowedContents}&quot; \n                                      AlternatingRowBackground=&quot;LightBlue&quot;\n                                      AutoGenerateColumns=&quot;False&quot;\n                                      CanUserAddRows=&quot;False&quot;&gt;\n                                &lt;DataGrid.Columns&gt;\n                                    ...\n                                &lt;/DataGrid.Columns&gt;\n                            &lt;/DataGrid&gt;\n                        &lt;/StackPanel&gt;\n                    &lt;/StackPanel&gt;\n                &lt;/Label&gt;\n            &lt;/Border&gt;\n        &lt;/DataTemplate&gt;\n&lt;ScrollViewer VerticalScrollBarVisibility=&quot;Auto&quot;&gt;\n        &lt;StackPanel Orientation=&quot;Vertical&quot; HorizontalAlignment=&quot;Stretch&quot;&gt;\n            &lt;Grid x:Name=&quot;LayoutRoot&quot;&gt;\n                &lt;Grid.RowDefinitions&gt;\n                    &lt;RowDefinition /&gt;\n                    &lt;RowDefinition Height=&quot;Auto&quot; /&gt;\n                &lt;/Grid.RowDefinitions&gt;\n                &lt;ListBox ItemsSource=&quot;{Binding Devices}&quot; \n                     ItemTemplate=&quot;{StaticResource ListBoxDataTemplate}&quot;\n                     SelectedItem=&quot;{Binding SelectedDevice, Mode=TwoWay}&quot;\n                     Width=&quot;Auto&quot; \n                     HorizontalContentAlignment=&quot;Stretch&quot; \n                     SelectionMode=&quot;Single&quot;/&gt;\n            &lt;/Grid&gt;\n        &lt;/StackPanel&gt;\n    &lt;/ScrollViewer&gt;\n</code></pre>\n\nAlso, when should I use Binding to a Command:<br />\n<pre><code>&lt;Button Command={Binding SomeCommand}....</code></pre>\n\nvs. \r<br />\n<br />\nBinding using Event<br />\n<pre><code>&lt;Button&gt;\n   &lt;I:EventName=&quot;MouseLeftButtonDown&quot;&gt;\n        &lt;Command={Binding .... } CommandParameter={Binding....}\n...\n&lt;/Button</code></pre>\n\nThanks in advance! I've been stuck with this for 2 days now... <br />\n",
    "PostedDate": "2014-07-09T04:56:39.003-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1264289",
    "ThreadId": "551024",
    "Html": "Here is an example of using commands in a data template for a listbox. hope it helps.<br />\n<pre><code>            &lt;ListBox Name=&quot;listbox_customer&quot;\n                                Grid.Row=&quot;0&quot; \n                                Margin=&quot;0&quot; \n                                ScrollViewer.CanContentScroll=&quot;True&quot; \n                                ItemsSource=&quot;{Binding Customers}&quot; \n                                Grid.ColumnSpan=&quot;4&quot; \n                                SelectionMode=&quot;Single&quot;&gt;\n\n                &lt;ListBox.ItemTemplate&gt;\n                    &lt;DataTemplate&gt;\n                        &lt;StackPanel&gt;\n                            &lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;\n                                &lt;Image Source=&quot;{Binding Path=MessageInd,Converter={StaticResource ImagePathConverter}}&quot; \n                                                    Width=&quot;16&quot; \n                                                    Height=&quot;16&quot; \n                                                    Margin=&quot;0,0,7,0&quot; /&gt;\n                                &lt;TextBlock Text=&quot;{Binding Path=Message}&quot; \n                                            FontSize=&quot;14&quot; \n                                            Margin=&quot;0,0,7,0&quot;\n                                            FontWeight=&quot;Bold&quot; /&gt;\n\n                                &lt;Image Source=&quot;{Binding Path=Navigation.CustomerIndicator,Converter={StaticResource ImagePathConverter}}&quot; \n                                                    Width=&quot;16&quot; \n                                                    Height=&quot;16&quot; \n                                                    Margin=&quot;0,0,7,0&quot;&gt;\n                                &lt;/Image&gt;\n                                &lt;TextBlock&gt;\n                                    &lt;Hyperlink NavigateUri=&quot;{Binding Path=Navigation.Customer}&quot; Tag=&quot;{Binding Path=Navigation.CustomerID}&quot;&gt;\n                                        &lt;TextBlock Text=&quot;{Binding Path=Navigation.CustomerKindDesc}&quot; /&gt;\n                                        &lt;i:Interaction.Triggers&gt;\n                                            &lt;i:EventTrigger EventName=&quot;Click&quot;&gt;\n                                                    &lt;mvvm:EventToCommand Command=&quot;{Binding ElementName=listbox_customer, Mode=TwoWay, Path=DataContext.commandSelectItem}&quot; \n                                                                            CommandParameter=&quot;{Binding}&quot; /&gt;\n                                            &lt;/i:EventTrigger&gt;\n                                        &lt;/i:Interaction.Triggers&gt;\n                                    &lt;/Hyperlink&gt;    \n                                &lt;/TextBlock&gt;\n                            &lt;/StackPanel&gt;\n\n\n                        &lt;/StackPanel&gt;\n                    &lt;/DataTemplate&gt;\n                &lt;/ListBox.ItemTemplate&gt;\n                &lt;i:Interaction.Triggers&gt;\n                    &lt;i:EventTrigger EventName=&quot;SelectionChanged&quot;&gt;\n                        &lt;mvvm:EventToCommand Command=&quot;{Binding ElementName=listbox_customer, Mode=TwoWay, Path=DataContext.commandSelectCustomer}&quot; \n                                                CommandParameter=&quot;{Binding SelectedItem, ElementName=listbox_customer}&quot; /&gt;\n                    &lt;/i:EventTrigger&gt;\n                &lt;/i:Interaction.Triggers&gt;\n            &lt;/ListBox&gt;</code></pre>\n\nYou can then get your selected item in the viewmodel<br />\n<pre><code>this.commandSelectItem = new RelayCommand&lt;object&gt;((s) =&gt; \n                {\n                    if (s != null)\n                    {\n                        GetCustomerHistory((Customer)s);\n                    }\n                }\n            );</code></pre>\n\n",
    "PostedDate": "2014-07-10T01:58:30.187-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]
[
  {
    "Id": "1286624",
    "ThreadId": "559952",
    "Html": "Hello,\r<br />\n<br />\nI have a few questions regarding MVVM Light and UserControls.\r<br />\n<br />\nI have created a UserControls Library as we use a few of our controls in different applications with identical functionality. I've started using MVVM Light recently, but I'm not entirely sure how to integrate it.\r<br />\n<br />\nRight now, I have the MVVM Light Libraries in my UserControls library, because I use the DispatcherHelper, RelayCommands, and etc... but I don't have the ModelViewLocator. I'm getting my view models like below:<br />\n<pre><code>&lt;UserControl xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;\n             ...\n             x:Class=&quot;SubC_Controls.Views.CameraSerial&quot; \n             xmlns:Converters=&quot;clr-namespace:SubCTools.Converters;assembly=SubCTools&quot;\n             xmlns:Extenders=&quot;clr-namespace:SubCTools.Controls.WPF.Extenders&quot;\n             xmlns:Helpers=&quot;clr-namespace:SubCTools.Controls.WPF.Helpers&quot;\n             xmlns:VM=&quot;clr-namespace:SubCTools.Controls.WPF.ViewModels&quot;&gt;\n    &lt;UserControl.Resources&gt;\n        &lt;Converters:InverseBooleanConverter x:Key=&quot;InverseBooleanConverter&quot;/&gt;\n        &lt;Extenders:ListBoxExtenders x:Key=&quot;ScrollToEnd&quot;/&gt;\n    &lt;/UserControl.Resources&gt;\n    UserControl.DataContext&gt;\n        &lt;VM:SerialVM/&gt;\n    &lt;/UserControl.DataContext&gt;\n...</code></pre>\n\nI have a lot of shared dependencies among view models, I'm only using one serial object for example, so when I input the UserContol in to an application, I set its DataContext by with the following:<br />\n<pre><code>&lt;Views:CameraSerial DataContext=&quot;{Binding SerialVM, Source={StaticResource Locator}}&quot;/&gt;</code></pre>\n\nI have two constructors in my View Model, one default so it shows up in UserControl Library, and one preferred so SimpleIoc can call the right one:<br />\n<pre><code>public SerialVM()\n            :this(new SubCSerial(), \n            new MessageBoxDialogService(), \n            new SubCSave(&quot;test&quot;))\n        { }\n\n        [PreferredConstructor]\n        public SerialVM(ISubCSerial subCSerial, \n            IDialogService dialog,\n            ISettingsService settings)\n            : base(subCSerial, dialog, settings)\n        {\n...</code></pre>\n\nSo, it seems what's happening is my empty constructor is being called and creating my save file with the name &quot;test&quot;, and then the second constructor is being called from my application and SimpleIoc is injecting all the correct dependencies.\r<br />\n<br />\nShould I have a ViewModelLocater in my UserControls library, and get my View Models from the Ioc? Will take conflict with having another SimpleIoc in my application?\r<br />\n<br />\nWhen I remove my default constructor, my UserControl designer complains: Error\t4\t&quot;'SubCTools.Controls.WPF.ViewModels.SerialVM' does not contain a constructor that takes 0 arguments&quot;\r<br />\n<br />\nAnd when I remove my DataContext from my UserControl view, and try to set it from my application with SimpleIoc I get: &quot;'The invocation of the constructor on type 'SubC_Controls.Views.CameraSerial' that matches the specified binding constraints threw an exception.'&quot;\r<br />\n<br />\nI would certainly appreciate some guidance, thank you.<br />\n",
    "PostedDate": "2014-08-05T11:40:50.777-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1287344",
    "ThreadId": "559952",
    "Html": "I ended up adding a view model locator to my UserControl library and setting up my Locator as a static reference. The Views show up in my library just fine, but whenever I add them to my application, I get a red box with a red X in the center. Error message is: Exception: Cannot create an instance of &quot;DeviceControl&quot;.\r<br />\n<br />\nWhen I run my application however, it seems to be working fine.<br />\n",
    "PostedDate": "2014-08-06T16:15:02.88-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1287402",
    "ThreadId": "559952",
    "Html": "Hi,\r<br />\nI think I had once the red X as well, but can't recall the reason any more. You might have to debug the design time to find out. So I am not really sure about the problem, but I also struggled a bit till I got it running as expected. Below a sample of what I have:\r<br />\n<br />\nIoC<br />\n<pre><code>    public class ViewModelLocator\n    {\n        /// &lt;summary&gt;\n        /// Initializes a new instance of the ViewModelLocator class.\n        /// &lt;/summary&gt;\n        public ViewModelLocator()\n        {\n            ServiceLocator.SetLocatorProvider(() =&gt; SimpleIoc.Default);\n\n            if (ViewModelBase.IsInDesignModeStatic)\n            {\n                //Create design time view services and models\n                SimpleIoc.Default.Register&lt;IIoService, IoServicesDesign&gt;();\n            }\n            else\n            {\n                // Create run time view services and models\n                SimpleIoc.Default.Register&lt;IIoService, IoServices&gt;();\n            }\n\n            SimpleIoc.Default.Register&lt;MainViewModel&gt;();\n            SimpleIoc.Default.Register&lt;ContentViewModel&gt;();\n        }\n\n        public MainViewModel MainViewModel\n        {\n            get { return ServiceLocator.Current.GetInstance&lt;MainViewModel&gt;(); }\n        }\n\n        public ContentViewModel ContentViewModel\n        {\n            get { return ServiceLocator.Current.GetInstance&lt;ContentViewModel&gt;(); }\n        }\n        //Add some more here\n    }</code></pre>\n\nand in App.xaml add this line<br />\n<pre><code>    &lt;Application.Resources&gt;\n        &lt;tool:ViewModelLocator x:Key=&quot;Locator&quot; d:IsDataSource=&quot;True&quot; /&gt;\n\n        &lt;!-- Add this if you have a black themein VS in order to read black written text --&gt;\n        &lt;Style TargetType=&quot;{x:Type UserControl}&quot;&gt;\n            &lt;Style.Triggers&gt;\n                &lt;Trigger Property=&quot;componentModel:DesignerProperties.IsInDesignMode&quot; Value=&quot;true&quot;&gt;\n                    &lt;Setter Property=&quot;Background&quot; Value=&quot;WhiteSmoke&quot; /&gt;\n                &lt;/Trigger&gt;\n            &lt;/Style.Triggers&gt;\n        &lt;/Style&gt;\n\n    &lt;/Application.Resources&gt;</code></pre>\n\nView<br />\n<pre><code>&lt;UserControl x:Class=&quot;Tool.View.ContentView&quot;\n             xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;\n             xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;\n             xmlns:d=&quot;http://schemas.microsoft.com/expression/blend/2008&quot;\n             xmlns:mc=&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;\n             xmlns:sys=&quot;clr-namespace:System;assembly=mscorlib&quot;\n             DataContext=&quot;{Binding ContentViewModel,\n                                   Mode=OneWay,\n                                   Source={StaticResource Locator}}&quot;\n             d:DesignHeight=&quot;200&quot;\n             d:DesignWidth=&quot;300&quot;\n             mc:Ignorable=&quot;d&quot;&gt;\n...</code></pre>\n\nand in Code (View), just to make sure all was init propertly<br />\n<pre><code>    public partial class ContentView\n    {\n        public ContentView()\n        {\n            InitializeComponent();\n\n            ViewModel = DataContext as ContentViewModel;\n\n            if (ViewModel == null)\n            {\n                System.Diagnostics.Debugger.Break();\n            }\n       }\n\n        /// &lt;summary&gt;\n        /// This gets or sets the ViewModel, more used for test purposes.\n        /// &lt;/summary&gt;\n        public ContentViewModel ViewModel { get; set; }\n    }</code></pre>\n\nand finally the ViewModel<br />\n<pre><code>    public class ContentViewModel : ViewModelBase, IDataErrorInfo\n    {\n        private readonly IIoService _ioService;\n\n        public ContentViewModel(IIoService ioService)\n        {\n            _ioService = ioService;\n            MyProperty = _ioService.GetData();\n\n            if (IsInDesignMode)\n            {\n                //Get stuff for DesignTime\n            }\n            else\n            {\n                //Get stuff for RunTime\n            }\n        }\n\n        //Your code\n    }</code></pre>\n\nOne thing to add: if you call the same instance twice you might get an error, so you need to unregister it first. This needs a fix first as discussed here:\r<br />\n<a href=\"https://mvvmlight.codeplex.com/discussions/483764\" rel=\"nofollow\">https://mvvmlight.codeplex.com/discussions/483764</a>\r<br />\n<br />\nHope this helps<br />\n",
    "PostedDate": "2014-08-06T22:11:21.523-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]
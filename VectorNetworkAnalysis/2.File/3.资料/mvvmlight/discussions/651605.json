[
  {
    "Id": "1463943",
    "ThreadId": "651605",
    "Html": "I am new in Xamarin, while trying to build an app in Xamarin android using MVVM light, the app is running absolutely fine in debug mode, but in release mode it is abruptly crashing, after getting successfully deployed in the device. No error message is getting logged in the Xamarin studio, only two exceptions are shown, which are same.\r<br />\nException : C:\\Program Files (x86)\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(3,3): Warning MSB3247: Found conflicts between different versions of the same dependent assembly. In Visual Studio, double-click this warning (or select it and press Enter) to fix the conflicts; otherwise, add the following binding redirects to the &quot;runtime&quot; node in the application configuration file: (MSB3247) (AppMvvm)<br />\n",
    "PostedDate": "2016-02-22T03:33:02.283-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1463944",
    "ThreadId": "651605",
    "Html": "Hey, I isolated the problem, the page is crashing only when I am binding an edit text box in release mode, but binding a text view with the view model is working fine.\r<br />\n` [Activity (Label = &quot;AppMvvm&quot;, MainLauncher = true, Icon = &quot;@mipmap/icon&quot;)]\r<br />\npublic class MainActivity : Activity\r<br />\n{\r<br />\nprivate static bool _isInitialized;\r<br />\npublic MainViewModel ViewModel { get; set; }<br />\n<pre><code>int count = 1;\npublic Button button;\npublic EditText userNameData,userNameData1;\npublic TextView userNameDisplay,userNameDisplay1;\n\nprotected override void OnCreate (Bundle savedInstanceState)\n{\n    base.OnCreate (savedInstanceState);\n\n    if(!_isInitialized)\n    {\n        var nav = new NavigationService();\n        nav.Configure(ViewsList.Main.ToString(), typeof(MainActivity));\n        var builder = new ContainerBuilder();\n        builder.RegisterInstance&lt;INavigationService&gt;(nav);\n        builder.RegisterType&lt;MainViewModel&gt;();\n        var container = builder.Build();\n        var serviceLocator = new AutofacServiceLocator(container);\n        ServiceLocator.SetLocatorProvider(() =&gt; serviceLocator);\n        _isInitialized = true;\n    }\n\n    ViewModel = ServiceLocator.Current.GetInstance&lt;MainViewModel&gt;();\n    //ViewModel.UserName = &quot;TEST&quot;;\n    ViewModel.New = &quot;Bind&quot;;</code></pre>\n\n// ViewModel.New=ViewModel.UserName;<br />\n<pre><code>    SetContentView (Resource.Layout.Main);\n\n    userNameData = FindViewById&lt;EditText&gt; (Resource.Id.textBoxName);\n\n    userNameDisplay1= FindViewById&lt;TextView&gt; (Resource.Id.textName1);\n    userNameDisplay= FindViewById&lt;TextView&gt; (Resource.Id.textName);\n    userNameData1 = FindViewById&lt;EditText&gt; (Resource.Id.textBoxName1);</code></pre>\n\n//\r<br />\n//<br />\n<pre><code>    this.SetBinding(() =&gt; ViewModel.UserName, userNameData, () =&gt; userNameData1.Text,BindingMode.TwoWay);\n\n    this.SetBinding(() =&gt; ViewModel.UserName,userNameData1, () =&gt; userNameData1.Text, BindingMode.TwoWay);</code></pre>\n\n//\r<br />\n// button = FindViewById (Resource.Id.myButton);\r<br />\n//\r<br />\n// button.Click += delegate {\r<br />\n// button.Text = string.Format (&quot;{0} clicks!&quot;, count++);\r<br />\n// //ViewModel.UserName = string.Format (&quot;{0} clicks!&quot;, count++);\r<br />\n// var test = FindViewById (Resource.Id.textBoxName);\r<br />\n// //this.SetBinding(() =&gt; ViewModel.UserName, userNameDisplay1,() =&gt; userNameData.Text, BindingMode.TwoWay);\r<br />\n// this.SetBinding(() =&gt; ViewModel.UserName, userNameData,() =&gt; userNameData1.Text, BindingMode.TwoWay);\r<br />\n//\r<br />\n// }`<br />\n",
    "PostedDate": "2016-02-22T03:33:59.63-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]
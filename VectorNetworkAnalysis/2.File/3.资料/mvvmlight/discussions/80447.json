[
  {
    "Id": "275726",
    "ThreadId": "80447",
    "Html": "<p>In the sample below, I am trying to use the EventToCommand behavior in a DataTemplate. The issue is that the DataContext for the DataTemplate is the data from an ItemSource.</p>\r\n<p>That works fine for sending the CommandParameters, but the Binding for Command is messed up. I don't know how to specify the binding path for the top level control for which this data template is being used in.</p>\r\n<p>&nbsp;</p>\r\n<p>SelectMarker is a RelayMethod in the ViewModel, but how do I get a binding handle for the ViewModel, when the DataTemplate has been given a different context.</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>Any ideas?</p>\r\n<p>&nbsp;</p>\r\n<p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">DataTemplate</span> <span style=\"color:Red\">x:Key</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">EventTemplate</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n    \t<span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Border</span> <span style=\"color:Red\">Width</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">10</span><span style=\"color:Black\">&quot;</span> \r\n    \t\t<span style=\"color:Red\">Height</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">10</span><span style=\"color:Black\">&quot;</span> \r\n    \t\t<span style=\"color:Red\">map:MapLayer.Position</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding MapLocation}</span><span style=\"color:Black\">&quot;</span>\r\n    \t\t<span style=\"color:Red\">map:MapLayer.PositionOrigin</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Center</span><span style=\"color:Black\">&quot;</span>\r\n    \t\t<span style=\"color:Red\">Tag</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Name}</span><span style=\"color:Black\">&quot;</span> \r\n    \t\t<span style=\"color:Red\">ToolTipService.ToolTip</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Name}</span><span style=\"color:Black\">&quot;</span>\r\n    \t\t<span style=\"color:Red\">Opacity</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">1</span><span style=\"color:Black\">&quot;</span> \r\n    \t\t<span style=\"color:Red\">UseLayoutRounding</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">false</span><span style=\"color:Black\">&quot;</span> \r\n    \t\t<span style=\"color:Red\">Background</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Red</span><span style=\"color:Black\">&quot;</span> \r\n    \t\t<span style=\"color:Red\">CornerRadius</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">10</span><span style=\"color:Black\">&quot;</span> \r\n             <span style=\"color:Blue\">&gt;</span>\r\n    \t\t<span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">i</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">Interaction.Triggers</span><span style=\"color:Blue\">&gt;</span>\r\n    \t\t\t<span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">i</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">EventTrigger</span> <span style=\"color:Red\">EventName</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">MouseLeftButtonUp</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n    \t\t\t\t&lt;GalaSoft_MvvmLight_Command:EventToCommand \r\n\t\t\t\t\tCommand=&quot;{Binding SelectMarker}&quot; \r\n\t\t\t\t\tCommandParameter=&quot;{Binding ID}&quot;/&gt;\r\n    \t\t\t<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">i</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">EventTrigger</span><span style=\"color:Blue\">&gt;</span>\r\n    \t\t<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">i</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">Interaction.Triggers</span><span style=\"color:Blue\">&gt;</span>\r\n    \t<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Border</span><span style=\"color:Blue\">&gt;</span>\r\n    <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">DataTemplate</span><span style=\"color:Blue\">&gt;</span>\r\n</pre>\r\n</div>\r\n</p>",
    "PostedDate": "2010-01-11T08:23:06.87-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "276068",
    "ThreadId": "80447",
    "Html": "<p>Hi,</p>\r\n<p>The DataContext in data templates is automatically set on the data item that the template renders, as you found out. However, don't forget that DataContext is really just a shortcut. You can set a Binding to another object by specifying the Source of the Binding explicitly.</p>\r\n<p>For example:</p>\r\n<p>Command=&quot;{Binding Source={StaticResource Locator}, Path=Main.SelectMarker}&quot;</p>\r\n<p>Hope that helps,</p>\r\n<p>Laurent</p>",
    "PostedDate": "2010-01-12T01:24:13.733-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "276094",
    "ThreadId": "80447",
    "Html": "\r\n\r\n\r\n<p>You have an excellent talent of succinctly summarizing the issue. Thank you.<br>\r\n<br>\r\nLet me try to return the favor.<br>\r\n<br>\r\nThe VM is bound to the DataContext of the TemplateParent by the Locator dynamically. So what I am looking for is a way from within the Template to relatively crawl up to the TemplateParent, get the DataContext value, and crawl the PATH to get SelectMarker object (which is a RelayCommand).<br>\r\n<br>\r\nAlternatively, I suppose that if the RelayCommand was a static resource in &quot;Main&quot; called Main.SelectMarker then I could certainly use the Locator to find that RelayCommand and bind it to the template.<br>\r\n<br>\r\nWhat I don't think is possible is passing an reference to &quot;this&quot; to the Locator Main.SelectMarker get property method, so that that method could then crawl the tree, find the parent and then return the SelectMarker method that is appropriate for this particular View.<br>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n-----Original Message-----<br>\r\nFrom: lbugnion [<a href=\"mailto:notifications@codeplex.com\">mailto:notifications@codeplex.com</a>]<br>\r\nSent: Tue 1/12/2010 4:24 AM<br>\r\nTo: Gutfreund, Yechezkal<br>\r\nSubject: Re: EventToCommand in DataTemplate [mvvmlight:80447]<br>\r\n<br>\r\nFrom: lbugnion<br>\r\n<br>\r\nHi,The DataContext in data templates is automatically set on the data item that the template renders, as you found out. However, don't forget that DataContext is really just a shortcut. You can set a Binding to another object by specifying the Source of the Binding explicitly.For example:Command=&quot;{Binding Source={StaticResource Locator}, Path=Main.SelectMarker}&quot;Hope that helps,Laurent<br>\r\n<br>\r\n<br>\r\n<br>\r\n\r\n</p>\r\n\r\n",
    "PostedDate": "2010-01-12T03:05:32.237-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "276096",
    "ThreadId": "80447",
    "Html": "<p>Hi,</p>\r\n<p>I was actually hoping this would be a solution (and actually it is if you bind your ViewModel to the View through the ViewModelLocator like it is proposed by default in the toolkit when you create a new MVVM Light application. The Main property is a gateway to the MainViewModel through the ViewModelLocator class, which is declared as a resource (in App.xaml). In the current implementation. Commands are properties, so the expression {Binding Source={StaticResource Locator}, Path=Main.SelectMarkerCommand} binds the button's Command property to that particular command on the MainViewModel instance (the command does *not* have to be static, it is a normal property). It is just an indirection, if you like, since we cannot use the DataContext directly.</p>\r\n<p>Another way to do this, if you don't have the ViewModelLocator, is to use the TemplatedParent from within the template to access the templated control. Then you can get the DataContext from there. This works, however, only from SIlverlight 4. Is that an option for you?</p>\r\n<p>I would be happy to make you a sample if you like. Let me know.</p>\r\n<p>Cheers,</p>\r\n<p>Laurent</p>",
    "PostedDate": "2010-01-12T03:28:04.553-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "276186",
    "ThreadId": "80447",
    "Html": "<p>It's close to a solution. But I need to fill you in a little bit on what I did to your ViewModelLocator.</p>\r\n<p>In my application there is One instance of a Model (Class EventModel) and many dynamically created (V,VM) pairs created. The Class of the VM is always Class DataLens, but different Classes for each View.</p>\r\n<p>The View is wired to the View Model by:</p>\r\n<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; DataContext=&quot;{Binding DataLens, Source={StaticResource Locator}}&quot;</p>\r\n<p>And the Locator does:</p>\r\n<p>public DataLens DataLens<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; get { return new DataLens(); }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p>So there is no MainStatic.</p>\r\n<p>So I am looking for something I can use in the DataTemplate that can crawl up and find the current INSTANCE of the DataLens and bind to it. I don't think this works..and SL does not have WPF relative path binding.</p>\r\n<p><span><span id=\"ctl00_MTCS_main_ctl46_ctl00_ctl04\">\r\n<pre id=\"ctl00_MTCS_main_ctl46_ctl00_ctl04_code\" style=\"white-space:pre-wrap\"><span style=\"color:maroon\">{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext.SelectRelayCommand}<br><br>This is the creation of the RelayCommand in DataLens:<br></span>SelectMarker = new RelayCommand&lt;string&gt;(idString =&gt; this.selectMarker(idString));<br><br><span style=\"color:maroon\"><br>Alternatively, I can try to create a Static property in the DataLens class that holds the RelayCommand, and then try to figure out from the sender and event flags who it is that was pressed, and what the parent DataContext is.<br><br>Does that sound right?<br><br></span></pre>\r\n</span></span></p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-01-12T07:15:30.74-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "276232",
    "ThreadId": "80447",
    "Html": "<p>Ah OK that makes sense.</p>\r\n<p>Silverlight 4 does have RelativeSource={RelativeSource TemplatedParent}. Is it an option for you to upgrade?</p>\r\n<p>I am not sure you'll be able to bind to a static property, Silverlight does not have x:Static. That might be tough too. Another way could be to bind someting as a CommandParameter (for example just {Binding} which returns the current item) but again this is only an option in SL4, unless you do a few tricks like I did in the SL3 implementation of EventTocommand.</p>\r\n<p>if I was the architect on this project, and unless you have really good reasons not to, I would upgrade to SL4.</p>\r\n<p>Cheers,</p>\r\n<p>Laurent</p>",
    "PostedDate": "2010-01-12T08:20:53.51-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "276248",
    "ThreadId": "80447",
    "Html": "<p>I am using SL4, but I am stuck on the syntax for the Relative Source that I should be using..</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-01-12T08:43:45.07-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "276345",
    "ThreadId": "80447",
    "Html": "<p>Ah yes I was mistaken. TemplatedParent refers to the Marker in that case, not to the Lens.</p>\r\n<p>I have another solution: Can you save a reference to the Lens when you create the Markers? If yes, you can do</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><div style=\"color:Black;background-color:White\"><pre><span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">DataTemplate</span> <span style=\"color:Red\">x:Key</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">LensItemTemplate</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">StackPanel</span> <span style=\"color:Red\">Orientation</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Horizontal</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n        &lt;Button Content=&quot;Click&quot;\r\n                Width=&quot;75&quot;\r\n                Command=&quot;{Binding \r\n                            Path=Parent.SelectMarkerCommand}&quot;\r\n                CommandParameter=&quot;{Binding}&quot; /&gt;\r\n        <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">TextBlock</span> <span style=\"color:Red\">TextWrapping</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Wrap</span><span style=\"color:Black\">&quot;</span>\r\n                   <span style=\"color:Red\">Text</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Name}</span><span style=\"color:Black\">&quot;</span>\r\n                   <span style=\"color:Red\">VerticalAlignment</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Center</span><span style=\"color:Black\">&quot;</span>\r\n                   <span style=\"color:Red\">Margin</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">10,0,0,0</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Blue\">/&gt;</span>\r\n    <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">StackPanel</span><span style=\"color:Blue\">&gt;</span>\r\n<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">DataTemplate</span><span style=\"color:Blue\">&gt;</span>\r\n\r\n</pre>\r\n</div>\r\n</pre>\r\n</div>\r\n<p>with Parent being a property within the Marker class, that stores a reference to the LensViewModel.</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">public</span> LensViewModel(<span style=\"color:Blue\">int</span> lensIndex)\r\n{\r\n    Markers = <span style=\"color:Blue\">new</span> ObservableCollection&lt;Marker&gt;();\r\n\r\n    <span style=\"color:Blue\">for</span> (<span style=\"color:Blue\">var</span> index = 0; index &lt; 3; index++)\r\n    {\r\n        <span style=\"color:Blue\">var</span> marker = <span style=\"color:Blue\">new</span> Marker(<span style=\"color:Blue\">this</span>)\r\n        {\r\n            Name = <span style=\"color:#A31515\">&quot;Lens &quot;</span> + lensIndex + <span style=\"color:#A31515\">&quot; Marker &quot;</span> + index\r\n        };\r\n\r\n        Markers.Add(marker);\r\n    }\r\n\r\n    SelectMarkerCommand = <span style=\"color:Blue\">new</span> RelayCommand&lt;Marker&gt;(m =&gt; MessageBox.Show(m.Name));\r\n}\r\n\r\nand</pre>\r\n<pre><div style=\"color:Black;background-color:White\"><pre><span style=\"color:Blue\">public</span> <span style=\"color:Blue\">class</span> Marker\r\n{\r\n    <span style=\"color:Blue\">public</span> LensViewModel Parent\r\n    {\r\n        <span style=\"color:Blue\">get</span>;\r\n        <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">set</span>;\r\n    }\r\n\r\n    <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">string</span> Name { <span style=\"color:Blue\">get</span>; <span style=\"color:Blue\">set</span>; }\r\n\r\n    <span style=\"color:Blue\">public</span> Marker(LensViewModel parent)\r\n    {\r\n        Parent = parent;\r\n    }\r\n}\r\n\r\n</pre>\r\n</div>\r\n&nbsp;</pre>\r\n<pre>Hopefully that is possible for you.</pre>\r\n<pre>Cheers,</pre>\r\n<pre>Laurent</pre>\r\n</div>",
    "PostedDate": "2010-01-12T11:42:41.91-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "276426",
    "ThreadId": "80447",
    "Html": "\r\n\r\n<div class=Section1>\r\n\r\n<p class=MsoNormal><span style=\"font-size:11.0pt;font-family:'Calibri','sans-serif';color:#1F497D\">The Markers are created automatically from ItemSource by\r\nBingMaps. That is why they are data Templates:</span></p>\r\n\r\n<p class=MsoNormal><span style=\"font-size:11.0pt;font-family:'Calibri','sans-serif';color:#1F497D\"> </span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas;color:#A31515\">                </span><span style=\"font-size:9.5pt;font-family:Consolas;color:blue\">&lt;</span><span style=\"font-size:9.5pt;font-family:Consolas;color:#A31515\">map</span><span style=\"font-size:9.5pt;font-family:Consolas;color:blue\">:</span><span style=\"font-size:9.5pt;font-family:Consolas;color:#A31515\">MapLayer</span><span style=\"font-size:9.5pt;font-family:Consolas;color:red\"> x</span><span style=\"font-size:9.5pt;font-family:Consolas;color:blue\">:</span><span style=\"font-size:9.5pt;font-family:Consolas;color:red\">Name</span><span style=\"font-size:9.5pt;font-family:Consolas;color:blue\">=&quot;eventLayer&quot;</span><span style=\"font-size:9.5pt;font-family:Consolas\"></span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas\">                     <span style=\"color:red\">       Visibility</span><span style=\"color:blue\">=&quot;{</span><span style=\"color:#A31515\">Binding</span><span style=\"color:red\"> EventDisplay</span><span style=\"color:blue\">,</span><span style=\"color:red\"> Converter</span><span style=\"color:blue\">={</span><span style=\"color:#A31515\">StaticResource</span><span style=\"color:red\">\r\nBool2Visible</span><span style=\"color:blue\">},</span><span style=\"color:red\">\r\nMode</span><span style=\"color:blue\">=OneWay}&quot; &gt;</span></span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas;color:#A31515\">                    </span><span style=\"font-size:9.5pt;font-family:Consolas;color:blue\">&lt;</span><span style=\"font-size:9.5pt;font-family:Consolas;color:#A31515\">map</span><span style=\"font-size:9.5pt;font-family:Consolas;color:blue\">:</span><span style=\"font-size:9.5pt;font-family:Consolas;color:#A31515\">MapItemsControl</span><span style=\"font-size:9.5pt;font-family:Consolas\"> </span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas\">                           <span style=\"color:red\">       ItemTemplate</span><span style=\"color:blue\">=&quot;{</span><span style=\"color:#A31515\">StaticResource</span><span style=\"color:red\"> UEventTemplate</span><span style=\"color:blue\">}&quot;</span>\r\n</span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas\">                           <span style=\"color:red\">       ItemsSource</span><span style=\"color:blue\">=&quot;{</span><span style=\"color:#A31515\">Binding</span><span style=\"color:red\"> EventData</span><span style=\"color:blue\">,</span><span style=\"color:red\"> Mode</span><span style=\"color:blue\">=OneWay}&quot;</span></span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas\">                           <span style=\"color:red\">       HorizontalContentAlignment</span><span style=\"color:blue\">=&quot;Stretch&quot;</span><span style=\"color:red\">\r\nVerticalContentAlignment</span><span style=\"color:blue\">=&quot;Stretch&quot;</span></span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas\">                       <span style=\"color:blue\"> /&gt;</span></span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas;color:#A31515\">                </span><span style=\"font-size:9.5pt;font-family:Consolas;color:blue\">&lt;/</span><span style=\"font-size:9.5pt;font-family:Consolas;color:#A31515\">map</span><span style=\"font-size:9.5pt;font-family:Consolas;color:blue\">:</span><span style=\"font-size:9.5pt;font-family:Consolas;color:#A31515\">MapLayer</span><span style=\"font-size:9.5pt;font-family:Consolas;color:blue\">&gt;</span></p>\r\n\r\n<p class=MsoNormal><span style=\"font-size:11.0pt;font-family:'Calibri','sans-serif';color:#1F497D\"> </span></p>\r\n\r\n<p class=MsoNormal><span style=\"font-size:11.0pt;font-family:'Calibri','sans-serif';color:#1F497D\"> </span></p>\r\n\r\n<p class=MsoNormal><span style=\"font-size:11.0pt;font-family:'Calibri','sans-serif';color:#1F497D\">The current template I am using is not MVVM friendly. It works.\r\nBut I have to have an event handler in the View:</span></p>\r\n\r\n<p class=MsoNormal><span style=\"font-size:11.0pt;font-family:'Calibri','sans-serif';color:#1F497D\"> </span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas;color:#A31515\">            </span><span style=\"font-size:9.5pt;font-family:Consolas;color:blue\">&lt;</span><span style=\"font-size:9.5pt;font-family:Consolas;color:#A31515\">DataTemplate</span><span style=\"font-size:9.5pt;font-family:Consolas;color:red\"> x</span><span style=\"font-size:9.5pt;font-family:Consolas;color:blue\">:</span><span style=\"font-size:9.5pt;font-family:Consolas;color:red\">Key</span><span style=\"font-size:9.5pt;font-family:Consolas;color:blue\">=&quot;UEventTemplate&quot;&gt;</span><span style=\"font-size:9.5pt;font-family:Consolas\"></span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas;color:#A31515\">                </span><span style=\"font-size:9.5pt;font-family:Consolas;color:blue\">&lt;</span><span style=\"font-size:9.5pt;font-family:Consolas;color:#A31515\">Border</span><span style=\"font-size:9.5pt;font-family:Consolas\"> </span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas\">                   <span style=\"color:red\"> Width</span><span style=\"color:blue\">=&quot;10&quot;</span> </span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas\">              <span style=\"color:red\">       Height</span><span style=\"color:blue\">=&quot;10&quot;</span> </span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas\">              <span style=\"color:red\">       map</span><span style=\"color:blue\">:</span><span style=\"color:red\">MapLayer.Position</span><span style=\"color:blue\">=&quot;{</span><span style=\"color:#A31515\">Binding</span><span style=\"color:red\"> MapLocation</span><span style=\"color:blue\">}&quot;</span></span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas\">              <span style=\"color:red\">       map</span><span style=\"color:blue\">:</span><span style=\"color:red\">MapLayer.PositionOrigin</span><span style=\"color:blue\">=&quot;Center&quot;</span></span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas\">              <span style=\"color:red\">       Tag</span><span style=\"color:blue\">=&quot;{</span><span style=\"color:#A31515\">Binding</span><span style=\"color:red\"> ID</span><span style=\"color:blue\">}&quot;</span> </span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas\">              <span style=\"color:red\">       ToolTipService.ToolTip</span><span style=\"color:blue\">=&quot;{</span><span style=\"color:#A31515\">Binding</span><span style=\"color:red\"> Name</span><span style=\"color:blue\">}&quot;</span></span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas\">              <span style=\"color:red\">       Opacity</span><span style=\"color:blue\">=&quot;1&quot;</span> </span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas\">              <span style=\"color:red\">       UseLayoutRounding</span><span style=\"color:blue\">=&quot;false&quot;</span> </span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas\">              <span style=\"color:red\">       Background</span><span style=\"color:blue\">=&quot;Red&quot;</span> </span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas\">                   <span style=\"color:red\"> MouseLeftButtonUp</span><span style=\"color:blue\">=&quot;doSelect&quot;</span></span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas\">              <span style=\"color:red\">       CornerRadius</span><span style=\"color:blue\">=&quot;{</span><span style=\"color:#A31515\">Binding</span><span style=\"color:red\"> Selected</span><span style=\"color:blue\">,</span><span style=\"color:red\"> Converter</span><span style=\"color:blue\">={</span><span style=\"color:#A31515\">StaticResource</span><span style=\"color:red\"> Bool2Radius</span><span style=\"color:blue\">},</span><span style=\"color:red\"> Mode</span><span style=\"color:blue\">=OneWay}&quot;</span> </span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas\">                    <span style=\"color:blue\"> &gt;</span></span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas;color:#A31515\">                </span><span style=\"font-size:9.5pt;font-family:Consolas;color:blue\">&lt;/</span><span style=\"font-size:9.5pt;font-family:Consolas;color:#A31515\">Border</span><span style=\"font-size:9.5pt;font-family:Consolas;color:blue\">&gt;</span><span style=\"font-size:9.5pt;font-family:Consolas\"></span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas;color:#A31515\">            </span><span style=\"font-size:9.5pt;font-family:Consolas;color:blue\">&lt;/</span><span style=\"font-size:9.5pt;font-family:Consolas;color:#A31515\">DataTemplate</span><span style=\"font-size:9.5pt;font-family:Consolas;color:blue\">&gt;</span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas;color:blue\"> </span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas;color:blue\">The Handler looks like this:</span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas;color:blue\"> </span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas\">        <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> doSelect(<span style=\"color:blue\">object</span>\r\nsender, <span style=\"color:#2B91AF\">MouseEventArgs</span> e)</span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas\">        {</span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas\">            <span style=\"color:#2B91AF\">Border</span>\r\nmarkerBox = sender <span style=\"color:blue\">as</span> <span style=\"color:#2B91AF\">Border</span>;</span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas\">            <span style=\"color:blue\">string</span> id =\r\nmarkerBox.Tag <span style=\"color:blue\">as</span> <span style=\"color:blue\">string</span>;</span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas\">            <span style=\"color:#2B91AF\">DataLens</span>\r\nlens = <span style=\"color:blue\">this</span>.DataContext <span style=\"color:blue\">as</span> <span style=\"color:#2B91AF\">DataLens</span>;</span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas\">            lens.selectMarker(id);</span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas\">        }</span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas;color:blue\">        #end</span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas;color:blue\"> </span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas;color:blue\"> </span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas;color:blue\">This is very ugly. What I want to do is\r\nsomething that uses your EventToCommand Behavior, and not call\r\nDataLens.selectMarker() directly, but rather invoke the RelayCommand called\r\nSelectMarker:</span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas;color:blue\"> </span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas;color:blue\"> </span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas;color:#A31515\">    </span><span style=\"font-size:9.5pt;font-family:Consolas;color:blue\">&lt;</span><span style=\"font-size:9.5pt;font-family:Consolas;color:#A31515\">DataTemplate</span><span style=\"font-size:9.5pt;font-family:Consolas;color:red\"> x</span><span style=\"font-size:9.5pt;font-family:Consolas;color:blue\">:</span><span style=\"font-size:9.5pt;font-family:Consolas;color:red\">Key</span><span style=\"font-size:9.5pt;font-family:Consolas;color:blue\">=&quot;EventTemplate&quot;&gt;</span><span style=\"font-size:9.5pt;font-family:Consolas\"></span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas;color:#A31515\">       </span><span style=\"font-size:9.5pt;font-family:Consolas;color:blue\">&lt;</span><span style=\"font-size:9.5pt;font-family:Consolas;color:#A31515\">Border</span><span style=\"font-size:9.5pt;font-family:Consolas;color:red\"> Width</span><span style=\"font-size:9.5pt;font-family:Consolas;color:blue\">=&quot;10&quot;</span><span style=\"font-size:9.5pt;font-family:Consolas\"> </span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas\">       <span style=\"color:red\">       Height</span><span style=\"color:blue\">=&quot;10&quot;</span> </span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas\">       <span style=\"color:red\">       map</span><span style=\"color:blue\">:</span><span style=\"color:red\">MapLayer.Position</span><span style=\"color:blue\">=&quot;{</span><span style=\"color:#A31515\">Binding</span><span style=\"color:red\"> MapLocation</span><span style=\"color:blue\">}&quot;</span></span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas\">       <span style=\"color:red\">       map</span><span style=\"color:blue\">:</span><span style=\"color:red\">MapLayer.PositionOrigin</span><span style=\"color:blue\">=&quot;Center&quot;</span></span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas\">       <span style=\"color:red\">       Tag</span><span style=\"color:blue\">=&quot;{</span><span style=\"color:#A31515\">Binding</span><span style=\"color:red\"> ID</span><span style=\"color:blue\">}&quot;</span> </span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas\">       <span style=\"color:red\">       ToolTipService.ToolTip</span><span style=\"color:blue\">=&quot;{</span><span style=\"color:#A31515\">Binding</span><span style=\"color:red\"> Name</span><span style=\"color:blue\">}&quot;</span></span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas\">       <span style=\"color:red\">       Opacity</span><span style=\"color:blue\">=&quot;1&quot;</span> </span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas\">       <span style=\"color:red\">       UseLayoutRounding</span><span style=\"color:blue\">=&quot;false&quot;</span> </span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas\">       <span style=\"color:red\">       Background</span><span style=\"color:blue\">=&quot;Red&quot;</span> </span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas\">           <span style=\"color:red\"> MouseLeftButtonUp</span><span style=\"color:blue\">=&quot;doSelect&quot;</span></span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas\">       <span style=\"color:red\">       CornerRadius</span><span style=\"color:blue\">=&quot;10&quot;</span> </span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas\">            <span style=\"color:blue\"> &gt;</span></span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas;color:#A31515\">              </span><span style=\"font-size:9.5pt;font-family:Consolas;color:green\">&lt;!--</span><span style=\"font-size:9.5pt;font-family:Consolas\"></span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas;color:green\">                     </span><span style=\"font-size:9.5pt;font-family:Consolas\"></span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas;color:green\">                           &lt;GalaSoft_MvvmLight_Command:EventToCommand\r\n</span><span style=\"font-size:9.5pt;font-family:Consolas\"></span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas;color:green\">                                  Command=&quot;{Binding\r\nSelectMarker}&quot; </span><span style=\"font-size:9.5pt;font-family:Consolas\"></span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas;color:green\">                                  CommandParameter=&quot;{Binding\r\nID}&quot;/&gt;</span><span style=\"font-size:9.5pt;font-family:Consolas\"></span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas;color:green\">                     </span><span style=\"font-size:9.5pt;font-family:Consolas\"></span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas;color:green\">              --&gt;</span><span style=\"font-size:9.5pt;font-family:Consolas\"></span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas;color:#A31515\">       </span><span style=\"font-size:9.5pt;font-family:Consolas;color:blue\">&lt;/</span><span style=\"font-size:9.5pt;font-family:Consolas;color:#A31515\">Border</span><span style=\"font-size:9.5pt;font-family:Consolas;color:blue\">&gt;</span><span style=\"font-size:9.5pt;font-family:Consolas\"></span></p>\r\n\r\n<p class=MsoNormal style=\"text-autospace:none\"><span style=\"font-size:9.5pt;font-family:Consolas;color:#A31515\">    </span><span style=\"font-size:9.5pt;font-family:Consolas;color:blue\">&lt;/</span><span style=\"font-size:9.5pt;font-family:Consolas;color:#A31515\">DataTemplate</span><span style=\"font-size:9.5pt;font-family:Consolas;color:blue\">&gt;</span></p>\r\n\r\n<p class=MsoNormal><span style=\"font-size:11.0pt;font-family:'Calibri','sans-serif';color:#1F497D\"> </span></p>\r\n\r\n<p class=MsoNormal><span style=\"font-size:11.0pt;font-family:'Calibri','sans-serif';color:#1F497D\"> </span></p>\r\n\r\n<p class=MsoNormal><span style=\"font-size:11.0pt;font-family:'Calibri','sans-serif';color:#1F497D\"> </span></p>\r\n\r\n<p class=MsoNormal><span style=\"font-size:11.0pt;font-family:'Calibri','sans-serif';color:#1F497D\"> </span></p>\r\n\r\n<div>\r\n\r\n<div style=\"border:none;border-top:solid #B5C4DF 1.0pt;padding:3.0pt 0in 0in 0in\">\r\n\r\n<p class=MsoNormal><b><span style=\"font-size:10.0pt;font-family:'Tahoma','sans-serif'\">From:</span></b><span style=\"font-size:10.0pt;font-family:'Tahoma','sans-serif'\"> lbugnion\r\n[mailto:notifications@codeplex.com] <br>\r\n<b>Sent:</b> Tuesday, January 12, 2010 2:43 PM<br>\r\n<b>To:</b> Gutfreund, Yechezkal<br>\r\n<b>Subject:</b> Re: EventToCommand in DataTemplate [mvvmlight:80447]</span></p>\r\n\r\n</div>\r\n\r\n</div>\r\n\r\n<p class=MsoNormal> </p>\r\n\r\n<p><span style=\"font-size:9.0pt;font-family:'Verdana','sans-serif'\">From:\r\nlbugnion</span></p>\r\n\r\n<div style=\"margin-bottom:24.0pt\" id=ThreadNotificationPostBody>\r\n\r\n<p><span style=\"font-size:9.0pt;font-family:'Verdana','sans-serif'\">Ah yes I\r\nwas mistaken. TemplatedParent refers to the Marker in that case, not to the\r\nLens.</span></p>\r\n\r\n<p><span style=\"font-size:9.0pt;font-family:'Verdana','sans-serif'\">I have\r\nanother solution: Can you save a reference to the Lens when you create the\r\nMarkers? If yes, you can do</span></p>\r\n\r\n<div>\r\n\r\n<div><pre style=\"background:white\"><span style=\"font-size:14.5pt;color:blue\">&lt;</span><span style=\"font-size:14.5pt;color:#A31515\">DataTemplate</span><span style=\"font-size:14.5pt;color:black\"> </span><span style=\"font-size:14.5pt;color:red\">x:Key</span><span style=\"font-size:14.5pt;color:blue\">=</span><span style=\"font-size:14.5pt;color:black\">&quot;</span><span style=\"font-size:14.5pt;color:blue\">LensItemTemplate</span><span style=\"font-size:14.5pt;color:black\">&quot;</span><span style=\"font-size:14.5pt;color:blue\">&gt;</span><span style=\"font-size:14.5pt;color:black\"></span></pre><pre style=\"background:white\"><span style=\"font-size:14.5pt;color:black\">    </span><span style=\"font-size:14.5pt;color:blue\">&lt;</span><span style=\"font-size:14.5pt;color:#A31515\">StackPanel</span><span style=\"font-size:14.5pt;color:black\"> </span><span style=\"font-size:14.5pt;color:red\">Orientation</span><span style=\"font-size:14.5pt;color:blue\">=</span><span style=\"font-size:14.5pt;color:black\">&quot;</span><span style=\"font-size:14.5pt;color:blue\">Horizontal</span><span style=\"font-size:14.5pt;color:black\">&quot;</span><span style=\"font-size:14.5pt;color:blue\">&gt;</span><span style=\"font-size:14.5pt;color:black\"></span></pre><pre style=\"background:white\"><span style=\"font-size:14.5pt;color:black\">        &lt;Button Content=&quot;Click&quot;</span></pre><pre style=\"background:white\"><span style=\"font-size:14.5pt;color:black\">                Width=&quot;75&quot;</span></pre><pre style=\"background:white\"><span style=\"font-size:14.5pt;color:black\">                Command=&quot;{Binding </span></pre><pre style=\"background:white\"><span style=\"font-size:14.5pt;color:black\">                            Path=Parent.SelectMarkerCommand}&quot;</span></pre><pre style=\"background:white\"><span style=\"font-size:14.5pt;color:black\">                CommandParameter=&quot;{Binding}&quot; /&gt;</span></pre><pre style=\"background:white\"><span style=\"font-size:14.5pt;color:black\">        </span><span style=\"font-size:14.5pt;color:blue\">&lt;</span><span style=\"font-size:14.5pt;color:#A31515\">TextBlock</span><span style=\"font-size:14.5pt;color:black\"> </span><span style=\"font-size:14.5pt;color:red\">TextWrapping</span><span style=\"font-size:14.5pt;color:blue\">=</span><span style=\"font-size:14.5pt;color:black\">&quot;</span><span style=\"font-size:14.5pt;color:blue\">Wrap</span><span style=\"font-size:14.5pt;color:black\">&quot;</span></pre><pre style=\"background:white\"><span style=\"font-size:14.5pt;color:black\">                   </span><span style=\"font-size:14.5pt;color:red\">Text</span><span style=\"font-size:14.5pt;color:blue\">=</span><span style=\"font-size:14.5pt;color:black\">&quot;</span><span style=\"font-size:14.5pt;color:blue\">{Binding Name}</span><span style=\"font-size:14.5pt;color:black\">&quot;</span></pre><pre style=\"background:white\"><span style=\"font-size:14.5pt;color:black\">                   </span><span style=\"font-size:14.5pt;color:red\">VerticalAlignment</span><span style=\"font-size:14.5pt;color:blue\">=</span><span style=\"font-size:14.5pt;color:black\">&quot;</span><span style=\"font-size:14.5pt;color:blue\">Center</span><span style=\"font-size:14.5pt;color:black\">&quot;</span></pre><pre style=\"background:white\"><span style=\"font-size:14.5pt;color:black\">                   </span><span style=\"font-size:14.5pt;color:red\">Margin</span><span style=\"font-size:14.5pt;color:blue\">=</span><span style=\"font-size:14.5pt;color:black\">&quot;</span><span style=\"font-size:14.5pt;color:blue\">10,0,0,0</span><span style=\"font-size:14.5pt;color:black\">&quot; </span><span style=\"font-size:14.5pt;color:blue\">/&gt;</span><span style=\"font-size:14.5pt;color:black\"></span></pre><pre style=\"background:white\"><span style=\"font-size:14.5pt;color:black\">    </span><span style=\"font-size:14.5pt;color:blue\">&lt;/</span><span style=\"font-size:14.5pt;color:#A31515\">StackPanel</span><span style=\"font-size:14.5pt;color:blue\">&gt;</span><span style=\"font-size:14.5pt;color:black\"></span></pre><pre style=\"background:white\"><span style=\"font-size:14.5pt;color:blue\">&lt;/</span><span style=\"font-size:14.5pt;color:#A31515\">DataTemplate</span><span style=\"font-size:14.5pt;color:blue\">&gt;</span><span style=\"font-size:14.5pt;color:black\"></span></pre><pre style=\"background:white\"><span style=\"font-size:14.5pt;color:black\"> </span></pre><pre style=\"background:white\"><span style=\"font-size:11.5pt;color:black\"> </span></pre></div>\r\n\r\n<pre style=\"background:white\"><span style=\"font-size:11.5pt;color:black\"> </span></pre></div>\r\n\r\n<p><span style=\"font-size:9.0pt;font-family:'Verdana','sans-serif'\">with Parent\r\nbeing a property within the Marker class, that stores a reference to the\r\nLensViewModel.</span></p>\r\n\r\n<div><pre style=\"background:white\"><span style=\"font-size:11.5pt;color:blue\">public</span><span style=\"font-size:11.5pt;color:black\"> LensViewModel(</span><span style=\"font-size:11.5pt;color:blue\">int</span><span style=\"font-size:11.5pt;color:black\"> lensIndex)</span></pre><pre style=\"background:white\"><span style=\"font-size:11.5pt;color:black\">{</span></pre><pre style=\"background:white\"><span style=\"font-size:11.5pt;color:black\">    Markers = </span><span style=\"font-size:11.5pt;color:blue\">new</span><span style=\"font-size:11.5pt;color:black\"> ObservableCollection&lt;Marker&gt;();</span></pre><pre style=\"background:white\"><span style=\"font-size:11.5pt;color:black\"> </span></pre><pre style=\"background:white\"><span style=\"font-size:11.5pt;color:black\">    </span><span style=\"font-size:11.5pt;color:blue\">for</span><span style=\"font-size:11.5pt;color:black\"> (</span><span style=\"font-size:11.5pt;color:blue\">var</span><span style=\"font-size:11.5pt;color:black\"> index = 0; index &lt; 3; index++)</span></pre><pre style=\"background:white\"><span style=\"font-size:11.5pt;color:black\">    {</span></pre><pre style=\"background:white\"><span style=\"font-size:11.5pt;color:black\">        </span><span style=\"font-size:11.5pt;color:blue\">var</span><span style=\"font-size:11.5pt;color:black\"> marker = </span><span style=\"font-size:11.5pt;color:blue\">new</span><span style=\"font-size:11.5pt;color:black\"> Marker(</span><span style=\"font-size:11.5pt;color:blue\">this</span><span style=\"font-size:11.5pt;color:black\">)</span></pre><pre style=\"background:white\"><span style=\"font-size:11.5pt;color:black\">        {</span></pre><pre style=\"background:white\"><span style=\"font-size:11.5pt;color:black\">            Name = </span><span style=\"font-size:11.5pt;color:#A31515\">&quot;Lens &quot;</span><span style=\"font-size:11.5pt;color:black\"> + lensIndex + </span><span style=\"font-size:11.5pt;color:#A31515\">&quot; Marker &quot;</span><span style=\"font-size:11.5pt;color:black\"> + index</span></pre><pre style=\"background:white\"><span style=\"font-size:11.5pt;color:black\">        };</span></pre><pre style=\"background:white\"><span style=\"font-size:11.5pt;color:black\"> </span></pre><pre style=\"background:white\"><span style=\"font-size:11.5pt;color:black\">        Markers.Add(marker);</span></pre><pre style=\"background:white\"><span style=\"font-size:11.5pt;color:black\">    }</span></pre><pre style=\"background:white\"><span style=\"font-size:11.5pt;color:black\"> </span></pre><pre style=\"background:white\"><span style=\"font-size:11.5pt;color:black\">    SelectMarkerCommand = </span><span style=\"font-size:11.5pt;color:blue\">new</span><span style=\"font-size:11.5pt;color:black\"> RelayCommand&lt;Marker&gt;(m =&gt; MessageBox.Show(m.Name));</span></pre><pre style=\"background:white\"><span style=\"font-size:11.5pt;color:black\">}</span></pre><pre style=\"background:white\"><span style=\"font-size:11.5pt;color:black\"> </span></pre><pre style=\"background:white\"><span style=\"font-size:11.5pt;color:black\">and</span></pre>\r\n\r\n<div><pre style=\"background:white\"><span style=\"font-size:14.5pt;color:blue\">public</span><span style=\"font-size:14.5pt;color:black\"> </span><span style=\"font-size:14.5pt;color:blue\">class</span><span style=\"font-size:14.5pt;color:black\"> Marker</span></pre><pre style=\"background:white\"><span style=\"font-size:14.5pt;color:black\">{</span></pre><pre style=\"background:white\"><span style=\"font-size:14.5pt;color:black\">    </span><span style=\"font-size:14.5pt;color:blue\">public</span><span style=\"font-size:14.5pt;color:black\"> LensViewModel Parent</span></pre><pre style=\"background:white\"><span style=\"font-size:14.5pt;color:black\">    {</span></pre><pre style=\"background:white\"><span style=\"font-size:14.5pt;color:black\">        </span><span style=\"font-size:14.5pt;color:blue\">get</span><span style=\"font-size:14.5pt;color:black\">;</span></pre><pre style=\"background:white\"><span style=\"font-size:14.5pt;color:black\">        </span><span style=\"font-size:14.5pt;color:blue\">private</span><span style=\"font-size:14.5pt;color:black\"> </span><span style=\"font-size:14.5pt;color:blue\">set</span><span style=\"font-size:14.5pt;color:black\">;</span></pre><pre style=\"background:white\"><span style=\"font-size:14.5pt;color:black\">    }</span></pre><pre style=\"background:white\"><span style=\"font-size:14.5pt;color:black\"> </span></pre><pre style=\"background:white\"><span style=\"font-size:14.5pt;color:black\">    </span><span style=\"font-size:14.5pt;color:blue\">public</span><span style=\"font-size:14.5pt;color:black\"> </span><span style=\"font-size:14.5pt;color:blue\">string</span><span style=\"font-size:14.5pt;color:black\"> Name { </span><span style=\"font-size:14.5pt;color:blue\">get</span><span style=\"font-size:14.5pt;color:black\">; </span><span style=\"font-size:14.5pt;color:blue\">set</span><span style=\"font-size:14.5pt;color:black\">; }</span></pre><pre style=\"background:white\"><span style=\"font-size:14.5pt;color:black\"> </span></pre><pre style=\"background:white\"><span style=\"font-size:14.5pt;color:black\">    </span><span style=\"font-size:14.5pt;color:blue\">public</span><span style=\"font-size:14.5pt;color:black\"> Marker(LensViewModel parent)</span></pre><pre style=\"background:white\"><span style=\"font-size:14.5pt;color:black\">    {</span></pre><pre style=\"background:white\"><span style=\"font-size:14.5pt;color:black\">        Parent = parent;</span></pre><pre style=\"background:white\"><span style=\"font-size:14.5pt;color:black\">    }</span></pre><pre style=\"background:white\"><span style=\"font-size:14.5pt;color:black\">}</span></pre><pre style=\"background:white\"><span style=\"font-size:14.5pt;color:black\"> </span></pre><pre style=\"background:white\"><span style=\"font-size:11.5pt;color:black\"> </span></pre></div>\r\n\r\n<pre style=\"background:white\"><span style=\"font-size:11.5pt;color:black\"> </span></pre><pre style=\"background:white\"><span style=\"font-size:11.5pt;color:black\"> </span></pre><pre style=\"background:white\"><span style=\"font-size:11.5pt;color:black\">Hopefully that is possible for you.</span></pre><pre style=\"background:white\"><span style=\"font-size:11.5pt;color:black\">Cheers,</span></pre><pre style=\"background:white\"><span style=\"font-size:11.5pt;color:black\">Laurent</span></pre></div>\r\n\r\n</div>\r\n\r\n<div style=\"border:none;border-top:solid #CCCCCC 1.0pt;padding:0in 0in 0in 0in\" id=ThreadNotificationFooter>\r\n\r\n<p><span style=\"font-size:9.0pt;font-family:'Verdana','sans-serif';color:gray\">Read\r\nthe <a href=\"http://mvvmlight.codeplex.com/Thread/View.aspx?ThreadId=80447&ANCHOR#Post276345\">full\r\ndiscussion online</a>.</span></p>\r\n\r\n<p><span style=\"font-size:9.0pt;font-family:'Verdana','sans-serif';color:gray\">To\r\nadd a post to this discussion, reply to this email (<a href=\"mailto:mvvmlight@discussions.codeplex.com?subject=[mvvmlight:80447]\">mvvmlight@discussions.codeplex.com</a>)</span></p>\r\n\r\n<p><span style=\"font-size:9.0pt;font-family:'Verdana','sans-serif';color:gray\">To\r\nstart a new discussion for this project, email <a href=\"mailto:mvvmlight@discussions.codeplex.com\">mvvmlight@discussions.codeplex.com</a></span></p>\r\n\r\n<p><span style=\"font-size:9.0pt;font-family:'Verdana','sans-serif';color:gray\">You\r\nare receiving this email because you subscribed to this discussion on CodePlex.\r\nYou can <a href=\"http://www.codeplex.com/site/discussions/thread/unsubscribe/80447\">unsubscribe</a>\r\non CodePlex.com.</span></p>\r\n\r\n<p><span style=\"font-size:9.0pt;font-family:'Verdana','sans-serif';color:gray\">Please\r\nnote: Images and attachments will be removed from emails. Any posts to this\r\ndiscussion will also be available online at CodePlex.com</span></p>\r\n\r\n</div>\r\n\r\n</div>\r\n\r\n",
    "PostedDate": "2010-01-12T14:01:52.127-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "276752",
    "ThreadId": "80447",
    "Html": "<p>After a good nights sleep, all became clearer. While not optimal in all aspects, your first advice in this chain was the best. Have the Locator find a Static ViewModel.</p>\r\n<p>So now I have a centeral VM dispatcher for all events that I want to capture from DataTemplates. Events are arriving there via the attached EventToCommand Behavior. This way the template can live anywhere. With explicit MouseEvent fields, the XAML parsing failed at runtime because the template was not in the xaml as the code behind.</p>\r\n<p>The simple version of a data template for a marker looks like this</p>\r\n<p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">DataTemplate</span> <span style=\"color:Red\">x:Key</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">EventTemplate</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n    \t<span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Border</span> \r\n\t\t   <span style=\"color:Red\">Width</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">10</span><span style=\"color:Black\">&quot;</span> \r\n    \t\t<span style=\"color:Red\">Height</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">10</span><span style=\"color:Black\">&quot;</span> \r\n    \t\t<span style=\"color:Red\">map:MapLayer.Position</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding MapLocation}</span><span style=\"color:Black\">&quot;</span>\r\n    \t\t<span style=\"color:Red\">map:MapLayer.PositionOrigin</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Center</span><span style=\"color:Black\">&quot;</span>\r\n    \t\t<span style=\"color:Red\">Tag</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding ID}</span><span style=\"color:Black\">&quot;</span> \r\n    \t\t<span style=\"color:Red\">ToolTipService.ToolTip</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Name}</span><span style=\"color:Black\">&quot;</span>\r\n    \t\t<span style=\"color:Red\">Opacity</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">1</span><span style=\"color:Black\">&quot;</span> \r\n    \t\t<span style=\"color:Red\">UseLayoutRounding</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">false</span><span style=\"color:Black\">&quot;</span> \r\n    \t\t<span style=\"color:Red\">Background</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Red</span><span style=\"color:Black\">&quot;</span> \r\n    \t\t<span style=\"color:Red\">CornerRadius</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Selected, Converter={StaticResource Bool2Radius}, Mode=OneWay}</span><span style=\"color:Black\">&quot;</span>\r\n             <span style=\"color:Blue\">&gt;</span>\r\n    \t\t<span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">i</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">Interaction.Triggers</span><span style=\"color:Blue\">&gt;</span>\r\n    \t\t\t<span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">i</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">EventTrigger</span> <span style=\"color:Red\">EventName</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">MouseLeftButtonDown</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n    \t\t\t\t<span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">gala</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">EventToCommand</span> \r\n\t\t\t\t\t<span style=\"color:Red\">Command</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Source={StaticResource Locator}, Path=ToolPanel.SelectMarker}</span><span style=\"color:Black\">&quot;</span>\r\n\t\t\t\t\t<span style=\"color:Red\">CommandParameter</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding ID}</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">/&gt;</span>\r\n    \t\t\t<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">i</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">EventTrigger</span><span style=\"color:Blue\">&gt;</span>\r\n    \t\t<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">i</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">Interaction.Triggers</span><span style=\"color:Blue\">&gt;</span>\r\n    \t<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Border</span><span style=\"color:Blue\">&gt;</span>\r\n    <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">DataTemplate</span><span style=\"color:Blue\">&gt;</span>\r\n</pre>\r\n</div>\r\n</p>",
    "PostedDate": "2010-01-13T09:29:52.303-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]